{"ast":null,"code":"var _jsxFileName = \"/home/leo1305286/collab-web3/reverif/frontend/src/pages/BusinessPortal.jsx\",\n  _s = $RefreshSig$();\n// import React, { useState, useEffect } from 'react';\n// import { useWeb3 } from '../contexts/Web3Context';\n// import { RECEIPT_STATUS } from '../config/contract';\n// import BusinessNavbar from '../components/Layout/BusinessNavbar';\n// import { \n//   Building2, \n//   CheckCircle, \n//   XCircle, \n//   Clock,\n//   Eye,\n//   AlertCircle,\n//   TrendingUp,\n//   Receipt\n// } from 'lucide-react';\n// import toast from 'react-hot-toast';\n\n// const BusinessPortal = () => {\n//   const { \n//     contract, \n//     formatEther, \n//     formatAddress,\n//     waitForTransaction\n//   } = useWeb3();\n\n//   const [pendingRequests, setPendingRequests] = useState([]);\n//   const [allRequests, setAllRequests] = useState([]);\n//   const [loading, setLoading] = useState(true);\n//   const [activeTab, setActiveTab] = useState('pending');\n//   const [processingRequests, setProcessingRequests] = useState(new Set());\n\n//   // For testing purposes, we'll use a hardcoded business address\n//   // In a real scenario, this would be dynamically determined\n//   const BUSINESS_ADDRESS = \"0x70997970C51812dc3A010C7d01b50e0d17dc79C8\"; // Account #1 from Hardhat\n\n//   useEffect(() => {\n//     if (contract) {\n//       loadBusinessData();\n//     }\n//   }, [contract]);\n\n//   const loadBusinessData = async () => {\n//     try {\n//       setLoading(true);\n\n//       // Get pending requests for this business\n//       const pendingIds = await contract.getPendingRequests(BUSINESS_ADDRESS);\n\n//       // Get all business receipts\n//       const allReceiptIds = await contract.getBusinessReceipts(BUSINESS_ADDRESS);\n\n//       // Load pending request details\n//       const pendingDetails = [];\n//       for (let id of pendingIds) {\n//         try {\n//           const receipt = await contract.getReceipt(Number(id));\n//           if (receipt.exists) {\n//             pendingDetails.push({\n//               id: Number(receipt.id),\n//               vendorName: receipt.vendorName,\n//               description: receipt.description,\n//               amount: receipt.amount,\n//               status: Number(receipt.status),\n//               transactionDate: new Date(Number(receipt.transactionDate) * 1000),\n//               requestTimestamp: new Date(Number(receipt.requestTimestamp) * 1000),\n//               customer: receipt.recipient\n//             });\n//           }\n//         } catch (error) {\n//           console.error(`Error loading pending request ${id}:`, error);\n//         }\n//       }\n\n//       // Load all request details\n//       const allDetails = [];\n//       for (let id of allReceiptIds) {\n//         try {\n//           const receipt = await contract.getReceipt(Number(id));\n//           if (receipt.exists) {\n//             allDetails.push({\n//               id: Number(receipt.id),\n//               vendorName: receipt.vendorName,\n//               description: receipt.description,\n//               amount: receipt.amount,\n//               status: Number(receipt.status),\n//               transactionDate: new Date(Number(receipt.transactionDate) * 1000),\n//               requestTimestamp: new Date(Number(receipt.requestTimestamp) * 1000),\n//               customer: receipt.recipient\n//             });\n//           }\n//         } catch (error) {\n//           console.error(`Error loading request ${id}:`, error);\n//         }\n//       }\n\n//       // Sort by request timestamp (newest first)\n//       pendingDetails.sort((a, b) => b.requestTimestamp - a.requestTimestamp);\n//       allDetails.sort((a, b) => b.requestTimestamp - a.requestTimestamp);\n\n//       setPendingRequests(pendingDetails);\n//       setAllRequests(allDetails);\n//     } catch (error) {\n//       console.error(\"Error loading business data:\", error);\n//       toast.error(\"Failed to load business data\");\n//     } finally {\n//       setLoading(false);\n//     }\n//   };\n\n//   const handleApprove = async (receiptId) => {\n//     try {\n//       setProcessingRequests(prev => new Set([...prev, receiptId]));\n\n//       const tx = await contract.approveReceipt(receiptId);\n//       toast.loading('Approving receipt...', { id: `approve-${receiptId}` });\n\n//       await waitForTransaction(tx.hash);\n\n//       toast.success('Receipt approved successfully!', { id: `approve-${receiptId}` });\n\n//       // Reload data\n//       await loadBusinessData();\n//     } catch (error) {\n//       console.error(\"Error approving receipt:\", error);\n//       toast.error(`Failed to approve receipt: ${error.reason || error.message}`, { id: `approve-${receiptId}` });\n//     } finally {\n//       setProcessingRequests(prev => {\n//         const newSet = new Set(prev);\n//         newSet.delete(receiptId);\n//         return newSet;\n//       });\n//     }\n//   };\n\n//   const handleReject = async (receiptId, reason = \"Request rejected by business\") => {\n//     try {\n//       setProcessingRequests(prev => new Set([...prev, receiptId]));\n\n//       const tx = await contract.rejectReceipt(receiptId, reason);\n//       toast.loading('Rejecting receipt...', { id: `reject-${receiptId}` });\n\n//       await waitForTransaction(tx.hash);\n\n//       toast.success('Receipt rejected successfully!', { id: `reject-${receiptId}` });\n\n//       // Reload data\n//       await loadBusinessData();\n//     } catch (error) {\n//       console.error(\"Error rejecting receipt:\", error);\n//       toast.error(`Failed to reject receipt: ${error.reason || error.message}`, { id: `reject-${receiptId}` });\n//     } finally {\n//       setProcessingRequests(prev => {\n//         const newSet = new Set(prev);\n//         newSet.delete(receiptId);\n//         return newSet;\n//       });\n//     }\n//   };\n\n//   const formatDate = (date) => {\n//     return date.toLocaleDateString() + ' ' + date.toLocaleTimeString([], { hour: '2-digit', minute: '2-digit' });\n//   };\n\n//   const getStatusIcon = (status) => {\n//     switch (status) {\n//       case 0: return <Clock className=\"h-4 w-4 text-yellow-500\" />;\n//       case 1: return <CheckCircle className=\"h-4 w-4 text-blue-500\" />;\n//       case 2: return <XCircle className=\"h-4 w-4 text-red-500\" />;\n//       case 3: return <CheckCircle className=\"h-4 w-4 text-green-500\" />;\n//       default: return <Clock className=\"h-4 w-4 text-gray-500\" />;\n//     }\n//   };\n\n//   const getStatusColor = (status) => {\n//     const colorMap = {\n//       0: 'bg-yellow-100 text-yellow-800',\n//       1: 'bg-blue-100 text-blue-800',\n//       2: 'bg-red-100 text-red-800',\n//       3: 'bg-green-100 text-green-800'\n//     };\n//     return colorMap[status] || 'bg-gray-100 text-gray-800';\n//   };\n\n//   const pendingCount = pendingRequests.length;\n//   const approvedCount = allRequests.filter(r => r.status === 1 || r.status === 3).length;\n//   const rejectedCount = allRequests.filter(r => r.status === 2).length;\n\n//   return (\n//     <>\n//       <BusinessNavbar />\n//       <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8 space-y-8\">\n//       {/* Header */}\n//       <div className=\"flex items-center justify-between\">\n//         <div>\n//           <h1 className=\"text-3xl font-bold text-gray-900 flex items-center space-x-3\">\n//             <Building2 className=\"h-8 w-8 text-blue-600\" />\n//             <span>Business Portal</span>\n//           </h1>\n//           <p className=\"mt-2 text-gray-600\">\n//             Review and verify customer receipt requests\n//           </p>\n//           <div className=\"mt-2 flex items-center space-x-2\">\n//             <CheckCircle className=\"h-4 w-4 text-green-500\" />\n//             <span className=\"text-sm text-gray-500\">Verified Business - Pre-approved Status</span>\n//           </div>\n//         </div>\n//         <div className=\"text-right\">\n//           <p className=\"text-sm text-gray-500\">Business Address</p>\n//           <p className=\"font-mono text-sm\">{formatAddress(BUSINESS_ADDRESS)}</p>\n//         </div>\n//       </div>\n\n//       {/* Stats Cards */}\n//       <div className=\"grid grid-cols-1 md:grid-cols-4 gap-6\">\n//         <div className=\"card\">\n//           <div className=\"flex items-center\">\n//             <div className=\"p-2 bg-yellow-100 rounded-lg\">\n//               <Clock className=\"h-6 w-6 text-yellow-600\" />\n//             </div>\n//             <div className=\"ml-4\">\n//               <p className=\"text-sm font-medium text-gray-600\">Pending Requests</p>\n//               <p className=\"text-2xl font-bold text-gray-900\">{pendingCount}</p>\n//             </div>\n//           </div>\n//         </div>\n\n//         <div className=\"card\">\n//           <div className=\"flex items-center\">\n//             <div className=\"p-2 bg-green-100 rounded-lg\">\n//               <CheckCircle className=\"h-6 w-6 text-green-600\" />\n//             </div>\n//             <div className=\"ml-4\">\n//               <p className=\"text-sm font-medium text-gray-600\">Approved</p>\n//               <p className=\"text-2xl font-bold text-gray-900\">{approvedCount}</p>\n//             </div>\n//           </div>\n//         </div>\n\n//         <div className=\"card\">\n//           <div className=\"flex items-center\">\n//             <div className=\"p-2 bg-red-100 rounded-lg\">\n//               <XCircle className=\"h-6 w-6 text-red-600\" />\n//             </div>\n//             <div className=\"ml-4\">\n//               <p className=\"text-sm font-medium text-gray-600\">Rejected</p>\n//               <p className=\"text-2xl font-bold text-gray-900\">{rejectedCount}</p>\n//             </div>\n//           </div>\n//         </div>\n\n//         <div className=\"card\">\n//           <div className=\"flex items-center\">\n//             <div className=\"p-2 bg-blue-100 rounded-lg\">\n//               <Receipt className=\"h-6 w-6 text-blue-600\" />\n//             </div>\n//             <div className=\"ml-4\">\n//               <p className=\"text-sm font-medium text-gray-600\">Total Requests</p>\n//               <p className=\"text-2xl font-bold text-gray-900\">{allRequests.length}</p>\n//             </div>\n//           </div>\n//         </div>\n//       </div>\n\n//       {/* Tabs */}\n//       <div className=\"bg-white rounded-lg shadow\">\n//         <div className=\"border-b border-gray-200\">\n//           <nav className=\"-mb-px flex space-x-8 px-6\">\n//             <button\n//               onClick={() => setActiveTab('pending')}\n//               className={`py-4 px-1 border-b-2 font-medium text-sm ${\n//                 activeTab === 'pending'\n//                   ? 'border-blue-500 text-blue-600'\n//                   : 'border-transparent text-gray-500 hover:text-gray-700 hover:border-gray-300'\n//               }`}\n//             >\n//               Pending Requests ({pendingCount})\n//             </button>\n//             <button\n//               onClick={() => setActiveTab('all')}\n//               className={`py-4 px-1 border-b-2 font-medium text-sm ${\n//                 activeTab === 'all'\n//                   ? 'border-blue-500 text-blue-600'\n//                   : 'border-transparent text-gray-500 hover:text-gray-700 hover:border-gray-300'\n//               }`}\n//             >\n//               All Requests ({allRequests.length})\n//             </button>\n//           </nav>\n//         </div>\n\n//         {/* Content */}\n//         <div className=\"p-6\">\n//           {loading ? (\n//             <div className=\"text-center py-8\">\n//               <div className=\"animate-spin rounded-full h-8 w-8 border-b-2 border-blue-600 mx-auto\"></div>\n//               <p className=\"mt-2 text-gray-600\">Loading requests...</p>\n//             </div>\n//           ) : (\n//             <>\n//               {activeTab === 'pending' && (\n//                 <>\n//                   {pendingRequests.length === 0 ? (\n//                     <div className=\"text-center py-8\">\n//                       <Clock className=\"h-12 w-12 text-gray-400 mx-auto mb-4\" />\n//                       <h3 className=\"text-lg font-medium text-gray-900 mb-2\">No pending requests</h3>\n//                       <p className=\"text-gray-600\">All receipt requests have been processed.</p>\n//                     </div>\n//                   ) : (\n//                     <div className=\"space-y-4\">\n//                       {pendingRequests.map((request) => (\n//                         <div key={request.id} className=\"border border-gray-200 rounded-lg p-6\">\n//                           <div className=\"flex justify-between items-start\">\n//                             <div className=\"flex-1\">\n//                               <div className=\"flex items-center space-x-2 mb-2\">\n//                                 <h3 className=\"text-lg font-medium text-gray-900\">\n//                                   Receipt Request #{request.id}\n//                                 </h3>\n//                                 <span className={`inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium ${getStatusColor(request.status)}`}>\n//                                   {getStatusIcon(request.status)}\n//                                   <span className=\"ml-1\">{RECEIPT_STATUS[request.status]}</span>\n//                                 </span>\n//                               </div>\n\n//                               <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4 mb-4\">\n//                                 <div>\n//                                   <p className=\"text-sm text-gray-600\">Customer</p>\n//                                   <p className=\"font-mono text-sm\">{formatAddress(request.customer)}</p>\n//                                 </div>\n//                                 <div>\n//                                   <p className=\"text-sm text-gray-600\">Amount</p>\n//                                   <p className=\"text-lg font-semibold\">{formatEther(request.amount)} ETH</p>\n//                                 </div>\n//                                 <div>\n//                                   <p className=\"text-sm text-gray-600\">Transaction Date</p>\n//                                   <p>{formatDate(request.transactionDate)}</p>\n//                                 </div>\n//                                 <div>\n//                                   <p className=\"text-sm text-gray-600\">Requested</p>\n//                                   <p>{formatDate(request.requestTimestamp)}</p>\n//                                 </div>\n//                               </div>\n\n//                               {request.description && (\n//                                 <div className=\"mb-4\">\n//                                   <p className=\"text-sm text-gray-600\">Description</p>\n//                                   <p className=\"text-gray-900\">{request.description}</p>\n//                                 </div>\n//                               )}\n//                             </div>\n//                           </div>\n\n//                           <div className=\"flex space-x-3 mt-4\">\n//                             <button\n//                               onClick={() => handleApprove(request.id)}\n//                               disabled={processingRequests.has(request.id)}\n//                               className=\"btn-primary flex items-center space-x-2 disabled:opacity-50 disabled:cursor-not-allowed\"\n//                             >\n//                               <CheckCircle className=\"h-4 w-4\" />\n//                               <span>Approve</span>\n//                             </button>\n//                             <button\n//                               onClick={() => handleReject(request.id)}\n//                               disabled={processingRequests.has(request.id)}\n//                               className=\"btn-secondary flex items-center space-x-2 disabled:opacity-50 disabled:cursor-not-allowed\"\n//                             >\n//                               <XCircle className=\"h-4 w-4\" />\n//                               <span>Reject</span>\n//                             </button>\n//                           </div>\n//                         </div>\n//                       ))}\n//                     </div>\n//                   )}\n//                 </>\n//               )}\n\n//               {activeTab === 'all' && (\n//                 <>\n//                   {allRequests.length === 0 ? (\n//                     <div className=\"text-center py-8\">\n//                       <Receipt className=\"h-12 w-12 text-gray-400 mx-auto mb-4\" />\n//                       <h3 className=\"text-lg font-medium text-gray-900 mb-2\">No requests yet</h3>\n//                       <p className=\"text-gray-600\">Customer receipt requests will appear here.</p>\n//                     </div>\n//                   ) : (\n//                     <div className=\"overflow-hidden\">\n//                       <table className=\"min-w-full divide-y divide-gray-200\">\n//                         <thead className=\"bg-gray-50\">\n//                           <tr>\n//                             <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n//                               Request ID\n//                             </th>\n//                             <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n//                               Customer\n//                             </th>\n//                             <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n//                               Amount\n//                             </th>\n//                             <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n//                               Status\n//                             </th>\n//                             <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n//                               Requested\n//                             </th>\n//                           </tr>\n//                         </thead>\n//                         <tbody className=\"bg-white divide-y divide-gray-200\">\n//                           {allRequests.map((request) => (\n//                             <tr key={request.id} className=\"hover:bg-gray-50\">\n//                               <td className=\"px-6 py-4 whitespace-nowrap\">\n//                                 <div className=\"text-sm font-medium text-gray-900\">\n//                                   #{request.id}\n//                                 </div>\n//                                 <div className=\"text-sm text-gray-500\">\n//                                   {request.description || 'No description'}\n//                                 </div>\n//                               </td>\n//                               <td className=\"px-6 py-4 whitespace-nowrap\">\n//                                 <div className=\"text-sm font-mono text-gray-900\">\n//                                   {formatAddress(request.customer)}\n//                                 </div>\n//                               </td>\n//                               <td className=\"px-6 py-4 whitespace-nowrap\">\n//                                 <div className=\"text-sm font-medium text-gray-900\">\n//                                   {formatEther(request.amount)} ETH\n//                                 </div>\n//                               </td>\n//                               <td className=\"px-6 py-4 whitespace-nowrap\">\n//                                 <span className={`inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium ${getStatusColor(request.status)}`}>\n//                                   {getStatusIcon(request.status)}\n//                                   <span className=\"ml-1\">{RECEIPT_STATUS[request.status]}</span>\n//                                 </span>\n//                               </td>\n//                               <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500\">\n//                                 {formatDate(request.requestTimestamp)}\n//                               </td>\n//                             </tr>\n//                           ))}\n//                         </tbody>\n//                       </table>\n//                     </div>\n//                   )}\n//                 </>\n//               )}\n//             </>\n//           )}\n//         </div>\n//       </div>\n//       </div>\n//     </>\n//   );\n// };\n\n// export default BusinessPortal;\n\nimport React, { useState, useEffect } from 'react';\nimport { useWeb3 } from '../contexts/Web3Context';\nimport { RECEIPT_STATUS } from '../config/contract';\nimport { Receipt, CheckCircle, XCircle, AlertTriangle, Clock, AlertCircle } from 'lucide-react';\nimport toast from 'react-hot-toast';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst BusinessPortal = () => {\n  _s();\n  const {\n    contract,\n    account,\n    formatEther\n  } = useWeb3();\n  const [pendingReceipts, setPendingReceipts] = useState([]);\n  const [allReceipts, setAllReceipts] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [isRejectModalOpen, setIsRejectModalOpen] = useState(false);\n  const [rejectionReason, setRejectionReason] = useState('');\n  const [rejectionError, setRejectionError] = useState('');\n  const [selectedReceiptId, setSelectedReceiptId] = useState(null);\n  const [isDisputeModalOpen, setIsDisputeModalOpen] = useState(false);\n  const [disputeReason, setDisputeReason] = useState('');\n  const [disputeError, setDisputeError] = useState('');\n  useEffect(() => {\n    if (contract && account) {\n      loadReceipts();\n    }\n  }, [contract, account]);\n  const loadReceipts = async () => {\n    try {\n      setLoading(true);\n      const receiptCount = Number(await contract.getReceiptCount());\n      const pending = [];\n      const all = [];\n      const blockTimestamp = Math.floor(Date.now() / 1000);\n      for (let i = 1; i <= receiptCount; i++) {\n        const receipt = await contract.getReceipt(i);\n        if (receipt.exists && receipt.issuer.toLowerCase() === account.toLowerCase()) {\n          const isExpired = receipt.status === 0 && blockTimestamp > Number(receipt.deadline);\n          const receiptData = {\n            id: Number(receipt.id),\n            vendorName: receipt.vendorName,\n            description: receipt.description,\n            amount: formatEther(receipt.amount),\n            status: isExpired ? 6 : Number(receipt.status),\n            transactionDate: new Date(Number(receipt.transactionDate) * 1000),\n            requestTimestamp: new Date(Number(receipt.requestTimestamp) * 1000),\n            deadline: new Date(Number(receipt.deadline) * 1000),\n            customer: receipt.recipient,\n            rejectionReason: receipt.rejectionReason || '',\n            disputeReason: receipt.disputeReason || ''\n          };\n          all.push(receiptData);\n          if (receiptData.status === 0 && !isExpired) {\n            pending.push(receiptData);\n          }\n        }\n      }\n      setPendingReceipts(pending);\n      setAllReceipts(all);\n    } catch (error) {\n      console.error('Error loading receipts:', error);\n      toast.error('Failed to load receipts');\n    } finally {\n      setLoading(false);\n    }\n  };\n  const handleApproveReceipt = async receiptId => {\n    try {\n      const tx = await contract.approveReceipt(receiptId);\n      toast.loading('Approving receipt...', {\n        id: 'approve'\n      });\n      await tx.wait();\n      toast.success('Receipt approved successfully!', {\n        id: 'approve'\n      });\n      await loadReceipts();\n    } catch (error) {\n      console.error('Error approving receipt:', error);\n      toast.error(error.reason || 'Failed to approve receipt', {\n        id: 'approve'\n      });\n    }\n  };\n  const openRejectModal = receiptId => {\n    setSelectedReceiptId(receiptId);\n    setRejectionReason('');\n    setRejectionError('');\n    setIsRejectModalOpen(true);\n  };\n  const closeRejectModal = () => {\n    setIsRejectModalOpen(false);\n    setRejectionReason('');\n    setRejectionError('');\n    setSelectedReceiptId(null);\n  };\n  const handleRejectReceipt = async () => {\n    if (!rejectionReason.trim()) {\n      setRejectionError('Rejection reason cannot be empty');\n      return;\n    }\n    try {\n      const tx = await contract.rejectReceipt(selectedReceiptId, rejectionReason.trim());\n      toast.loading('Rejecting receipt...', {\n        id: 'reject'\n      });\n      await tx.wait();\n      toast.success('Receipt rejected successfully!', {\n        id: 'reject'\n      });\n      await loadReceipts();\n      closeRejectModal();\n    } catch (error) {\n      console.error('Error rejecting receipt:', error);\n      toast.error(error.reason || 'Failed to reject receipt', {\n        id: 'reject'\n      });\n    }\n  };\n  const openDisputeModal = receiptId => {\n    setSelectedReceiptId(receiptId);\n    setDisputeReason('');\n    setDisputeError('');\n    setIsDisputeModalOpen(true);\n  };\n  const closeDisputeModal = () => {\n    setIsDisputeModalOpen(false);\n    setDisputeReason('');\n    setDisputeError('');\n    setSelectedReceiptId(null);\n  };\n  const handleDisputeReceipt = async () => {\n    if (!disputeReason.trim()) {\n      setDisputeError('Dispute reason cannot be empty');\n      return;\n    }\n    try {\n      const tx = await contract.disputeReceipt(selectedReceiptId, disputeReason.trim());\n      toast.loading('Disputing receipt...', {\n        id: 'dispute'\n      });\n      await tx.wait();\n      toast.success('Receipt disputed successfully!', {\n        id: 'dispute'\n      });\n      await loadReceipts();\n      closeDisputeModal();\n    } catch (error) {\n      console.error('Error disputing receipt:', error);\n      toast.error(error.reason || 'Failed to dispute receipt', {\n        id: 'dispute'\n      });\n    }\n  };\n  const canDispute = receipt => {\n    return receipt.status === 1 || receipt.status === 2 || receipt.status === 3;\n  };\n  const formatDate = date => {\n    return date.toLocaleDateString() + ' ' + date.toLocaleTimeString([], {\n      hour: '2-digit',\n      minute: '2-digit'\n    });\n  };\n  const getStatusIcon = status => {\n    switch (status) {\n      case 0:\n        return /*#__PURE__*/_jsxDEV(Clock, {\n          className: \"h-4 w-4 text-yellow-500\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 621,\n          columnNumber: 22\n        }, this);\n      case 1:\n        return /*#__PURE__*/_jsxDEV(CheckCircle, {\n          className: \"h-4 w-4 text-blue-500\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 622,\n          columnNumber: 22\n        }, this);\n      case 2:\n        return /*#__PURE__*/_jsxDEV(XCircle, {\n          className: \"h-4 w-4 text-red-500\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 623,\n          columnNumber: 22\n        }, this);\n      case 3:\n        return /*#__PURE__*/_jsxDEV(CheckCircle, {\n          className: \"h-4 w-4 text-green-500\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 624,\n          columnNumber: 22\n        }, this);\n      case 4:\n        return /*#__PURE__*/_jsxDEV(AlertTriangle, {\n          className: \"h-4 w-4 text-orange-500\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 625,\n          columnNumber: 22\n        }, this);\n      case 5:\n        return /*#__PURE__*/_jsxDEV(XCircle, {\n          className: \"h-4 w-4 text-gray-500\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 626,\n          columnNumber: 22\n        }, this);\n      case 6:\n        return /*#__PURE__*/_jsxDEV(AlertCircle, {\n          className: \"h-4 w-4 text-gray-500\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 627,\n          columnNumber: 22\n        }, this);\n      default:\n        return null;\n    }\n  };\n  const getStatusColor = status => {\n    const colorMap = {\n      0: 'bg-yellow-100 text-yellow-800',\n      1: 'bg-blue-100 text-blue-800',\n      2: 'bg-red-100 text-red-800',\n      3: 'bg-green-100 text-green-800',\n      4: 'bg-orange-100 text-orange-800',\n      5: 'bg-gray-100 text-gray-800',\n      6: 'bg-gray-100 text-gray-800'\n    };\n    return colorMap[status] || 'bg-gray-100 text-gray-800';\n  };\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-center py-8\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"animate-spin rounded-full h-8 w-8 border-b-2 border-blue-600 mx-auto\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 649,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"mt-2 text-gray-600\",\n          children: \"Loading receipts...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 650,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 648,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 647,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"text-2xl font-bold text-gray-900 mb-6\",\n      children: \"Business Portal\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 658,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mb-8\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"text-xl font-semibold text-gray-900 mb-4\",\n        children: \"Pending Requests\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 661,\n        columnNumber: 9\n      }, this), pendingReceipts.length === 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-center py-8\",\n        children: [/*#__PURE__*/_jsxDEV(Receipt, {\n          className: \"h-12 w-12 text-gray-400 mx-auto mb-4\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 664,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"text-lg font-medium text-gray-900 mb-2\",\n          children: \"No pending receipts\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 665,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-gray-600\",\n          children: \"There are no pending receipt requests at this time.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 666,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 663,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bg-white rounded-lg shadow overflow-hidden\",\n        children: /*#__PURE__*/_jsxDEV(\"table\", {\n          className: \"min-w-full divide-y divide-gray-200\",\n          children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n            className: \"bg-gray-50\",\n            children: /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                className: \"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase\",\n                children: \"ID\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 673,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                className: \"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase\",\n                children: \"Customer\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 674,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                className: \"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase\",\n                children: \"Amount\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 675,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                className: \"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase\",\n                children: \"Description\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 676,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                className: \"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase\",\n                children: \"Requested\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 677,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                className: \"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase\",\n                children: \"Actions\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 678,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 672,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 671,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n            className: \"bg-white divide-y divide-gray-200\",\n            children: pendingReceipts.map(receipt => /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                className: \"px-6 py-4 whitespace-nowrap text-sm font-medium text-gray-900\",\n                children: receipt.id\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 684,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                className: \"px-6 py-4 whitespace-nowrap text-sm text-gray-500\",\n                children: [receipt.customer.slice(0, 6), \"...\", receipt.customer.slice(-4)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 685,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                className: \"px-6 py-4 whitespace-nowrap text-sm text-gray-500\",\n                children: [receipt.amount, \" ETH\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 686,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                className: \"px-6 py-4 text-sm text-gray-500\",\n                children: receipt.description\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 687,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                className: \"px-6 py-4 whitespace-nowrap text-sm text-gray-500\",\n                children: formatDate(receipt.requestTimestamp)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 688,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                className: \"px-6 py-4 whitespace-nowrap text-sm font-medium\",\n                children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                  onClick: () => handleApproveReceipt(receipt.id),\n                  className: \"text-blue-600 hover:text-blue-900 mr-4\",\n                  children: \"Approve\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 690,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  onClick: () => openRejectModal(receipt.id),\n                  className: \"text-red-600 hover:text-red-900\",\n                  children: \"Reject\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 696,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 689,\n                columnNumber: 21\n              }, this)]\n            }, receipt.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 683,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 681,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 670,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 669,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 660,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"text-xl font-semibold text-gray-900 mb-4\",\n        children: \"All Requests\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 712,\n        columnNumber: 9\n      }, this), allReceipts.length === 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-center py-8\",\n        children: [/*#__PURE__*/_jsxDEV(Receipt, {\n          className: \"h-12 w-12 text-gray-400 mx-auto mb-4\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 715,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"text-lg font-medium text-gray-900 mb-2\",\n          children: \"No receipts\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 716,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-gray-600\",\n          children: \"There are no receipts associated with this account.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 717,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 714,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bg-white rounded-lg shadow overflow-hidden\",\n        children: /*#__PURE__*/_jsxDEV(\"table\", {\n          className: \"min-w-full divide-y divide-gray-200\",\n          children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n            className: \"bg-gray-50\",\n            children: /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                className: \"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase\",\n                children: \"ID\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 724,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                className: \"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase\",\n                children: \"Customer\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 725,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                className: \"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase\",\n                children: \"Amount\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 726,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                className: \"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase\",\n                children: \"Description\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 727,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                className: \"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase\",\n                children: \"Status\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 728,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                className: \"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase\",\n                children: \"Details\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 729,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                className: \"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase\",\n                children: \"Actions\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 730,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 723,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 722,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n            className: \"bg-white divide-y divide-gray-200\",\n            children: allReceipts.map(receipt => /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                className: \"px-6 py-4 whitespace-nowrap text-sm font-medium text-gray-900\",\n                children: receipt.id\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 736,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                className: \"px-6 py-4 whitespace-nowrap text-sm text-gray-500\",\n                children: [receipt.customer.slice(0, 6), \"...\", receipt.customer.slice(-4)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 737,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                className: \"px-6 py-4 whitespace-nowrap text-sm text-gray-500\",\n                children: [receipt.amount, \" ETH\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 738,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                className: \"px-6 py-4 text-sm text-gray-500\",\n                children: receipt.description\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 739,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                className: \"px-6 py-4 whitespace-nowrap\",\n                children: /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: `inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium ${getStatusColor(receipt.status)}`,\n                  children: [getStatusIcon(receipt.status), /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"ml-1\",\n                    children: RECEIPT_STATUS[receipt.status]\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 743,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 741,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 740,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                className: \"px-6 py-4 text-sm text-gray-500\",\n                children: [receipt.rejectionReason && receipt.status === 2 && /*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"text-red-600\",\n                  children: [\"Rejection Reason: \", receipt.rejectionReason]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 748,\n                  columnNumber: 25\n                }, this), receipt.disputeReason && receipt.status === 4 && /*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"text-orange-600\",\n                  children: [\"Dispute Reason: \", receipt.disputeReason]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 751,\n                  columnNumber: 25\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 746,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                className: \"px-6 py-4 whitespace-nowrap text-sm font-medium\",\n                children: canDispute(receipt) && /*#__PURE__*/_jsxDEV(\"button\", {\n                  onClick: () => openDisputeModal(receipt.id),\n                  className: \"text-orange-600 hover:text-orange-900\",\n                  children: \"Dispute\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 756,\n                  columnNumber: 25\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 754,\n                columnNumber: 21\n              }, this)]\n            }, receipt.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 735,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 733,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 721,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 720,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 711,\n      columnNumber: 7\n    }, this), isRejectModalOpen && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"fixed inset-0 bg-gray-600 bg-opacity-50 flex items-center justify-center z-50\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bg-white rounded-lg shadow-lg p-6 w-full max-w-md\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"text-lg font-medium text-gray-900 mb-4\",\n          children: [\"Reject Receipt #\", selectedReceiptId]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 776,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mb-4\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"rejectionReason\",\n            className: \"block text-sm font-medium text-gray-700\",\n            children: \"Reason for Rejection\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 778,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n            id: \"rejectionReason\",\n            className: \"mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-blue-500 focus:ring-blue-500 sm:text-sm\",\n            rows: \"4\",\n            value: rejectionReason,\n            onChange: e => {\n              setRejectionReason(e.target.value);\n              setRejectionError('');\n            },\n            placeholder: \"Enter the reason for rejecting this receipt\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 781,\n            columnNumber: 15\n          }, this), rejectionError && /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"mt-2 text-sm text-red-600\",\n            children: rejectionError\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 793,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 777,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex justify-end space-x-3\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: closeRejectModal,\n            className: \"px-4 py-2 text-sm font-medium text-gray-700 bg-gray-100 rounded-md hover:bg-gray-200\",\n            children: \"Cancel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 797,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleRejectReceipt,\n            className: \"px-4 py-2 text-sm font-medium text-white bg-red-600 rounded-md hover:bg-red-700\",\n            children: \"Confirm Rejection\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 803,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 796,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 775,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 774,\n      columnNumber: 9\n    }, this), isDisputeModalOpen && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"fixed inset-0 bg-gray-600 bg-opacity-50 flex items-center justify-center z-50\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bg-white rounded-lg shadow-lg p-6 w-full max-w-md\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"text-lg font-medium text-gray-900 mb-4\",\n          children: [\"Dispute Receipt #\", selectedReceiptId]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 818,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mb-4\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"disputeReason\",\n            className: \"block text-sm font-medium text-gray-700\",\n            children: \"Reason for Dispute\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 820,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n            id: \"disputeReason\",\n            className: \"mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-blue-500 focus:ring-blue-500 sm:text-sm\",\n            rows: \"4\",\n            value: disputeReason,\n            onChange: e => {\n              setDisputeReason(e.target.value);\n              setDisputeError('');\n            },\n            placeholder: \"Enter the reason for disputing this receipt\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 823,\n            columnNumber: 15\n          }, this), disputeError && /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"mt-2 text-sm text-red-600\",\n            children: disputeError\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 835,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 819,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex justify-end space-x-3\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: closeDisputeModal,\n            className: \"px-4 py-2 text-sm font-medium text-gray-700 bg-gray-100 rounded-md hover:bg-gray-200\",\n            children: \"Cancel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 839,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleDisputeReceipt,\n            className: \"px-4 py-2 text-sm font-medium text-white bg-orange-600 rounded-md hover:bg-orange-700\",\n            children: \"Confirm Dispute\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 845,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 838,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 817,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 816,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 657,\n    columnNumber: 5\n  }, this);\n};\n_s(BusinessPortal, \"V4apjjD7ZT8XgdjR/R7rAZQ/0bE=\", false, function () {\n  return [useWeb3];\n});\n_c = BusinessPortal;\nexport default BusinessPortal;\nvar _c;\n$RefreshReg$(_c, \"BusinessPortal\");","map":{"version":3,"names":["React","useState","useEffect","useWeb3","RECEIPT_STATUS","Receipt","CheckCircle","XCircle","AlertTriangle","Clock","AlertCircle","toast","jsxDEV","_jsxDEV","BusinessPortal","_s","contract","account","formatEther","pendingReceipts","setPendingReceipts","allReceipts","setAllReceipts","loading","setLoading","isRejectModalOpen","setIsRejectModalOpen","rejectionReason","setRejectionReason","rejectionError","setRejectionError","selectedReceiptId","setSelectedReceiptId","isDisputeModalOpen","setIsDisputeModalOpen","disputeReason","setDisputeReason","disputeError","setDisputeError","loadReceipts","receiptCount","Number","getReceiptCount","pending","all","blockTimestamp","Math","floor","Date","now","i","receipt","getReceipt","exists","issuer","toLowerCase","isExpired","status","deadline","receiptData","id","vendorName","description","amount","transactionDate","requestTimestamp","customer","recipient","push","error","console","handleApproveReceipt","receiptId","tx","approveReceipt","wait","success","reason","openRejectModal","closeRejectModal","handleRejectReceipt","trim","rejectReceipt","openDisputeModal","closeDisputeModal","handleDisputeReceipt","disputeReceipt","canDispute","formatDate","date","toLocaleDateString","toLocaleTimeString","hour","minute","getStatusIcon","className","fileName","_jsxFileName","lineNumber","columnNumber","getStatusColor","colorMap","children","length","map","slice","onClick","htmlFor","rows","value","onChange","e","target","placeholder","_c","$RefreshReg$"],"sources":["/home/leo1305286/collab-web3/reverif/frontend/src/pages/BusinessPortal.jsx"],"sourcesContent":["// import React, { useState, useEffect } from 'react';\n// import { useWeb3 } from '../contexts/Web3Context';\n// import { RECEIPT_STATUS } from '../config/contract';\n// import BusinessNavbar from '../components/Layout/BusinessNavbar';\n// import { \n//   Building2, \n//   CheckCircle, \n//   XCircle, \n//   Clock,\n//   Eye,\n//   AlertCircle,\n//   TrendingUp,\n//   Receipt\n// } from 'lucide-react';\n// import toast from 'react-hot-toast';\n\n// const BusinessPortal = () => {\n//   const { \n//     contract, \n//     formatEther, \n//     formatAddress,\n//     waitForTransaction\n//   } = useWeb3();\n  \n//   const [pendingRequests, setPendingRequests] = useState([]);\n//   const [allRequests, setAllRequests] = useState([]);\n//   const [loading, setLoading] = useState(true);\n//   const [activeTab, setActiveTab] = useState('pending');\n//   const [processingRequests, setProcessingRequests] = useState(new Set());\n\n//   // For testing purposes, we'll use a hardcoded business address\n//   // In a real scenario, this would be dynamically determined\n//   const BUSINESS_ADDRESS = \"0x70997970C51812dc3A010C7d01b50e0d17dc79C8\"; // Account #1 from Hardhat\n\n//   useEffect(() => {\n//     if (contract) {\n//       loadBusinessData();\n//     }\n//   }, [contract]);\n\n//   const loadBusinessData = async () => {\n//     try {\n//       setLoading(true);\n      \n//       // Get pending requests for this business\n//       const pendingIds = await contract.getPendingRequests(BUSINESS_ADDRESS);\n      \n//       // Get all business receipts\n//       const allReceiptIds = await contract.getBusinessReceipts(BUSINESS_ADDRESS);\n      \n//       // Load pending request details\n//       const pendingDetails = [];\n//       for (let id of pendingIds) {\n//         try {\n//           const receipt = await contract.getReceipt(Number(id));\n//           if (receipt.exists) {\n//             pendingDetails.push({\n//               id: Number(receipt.id),\n//               vendorName: receipt.vendorName,\n//               description: receipt.description,\n//               amount: receipt.amount,\n//               status: Number(receipt.status),\n//               transactionDate: new Date(Number(receipt.transactionDate) * 1000),\n//               requestTimestamp: new Date(Number(receipt.requestTimestamp) * 1000),\n//               customer: receipt.recipient\n//             });\n//           }\n//         } catch (error) {\n//           console.error(`Error loading pending request ${id}:`, error);\n//         }\n//       }\n\n//       // Load all request details\n//       const allDetails = [];\n//       for (let id of allReceiptIds) {\n//         try {\n//           const receipt = await contract.getReceipt(Number(id));\n//           if (receipt.exists) {\n//             allDetails.push({\n//               id: Number(receipt.id),\n//               vendorName: receipt.vendorName,\n//               description: receipt.description,\n//               amount: receipt.amount,\n//               status: Number(receipt.status),\n//               transactionDate: new Date(Number(receipt.transactionDate) * 1000),\n//               requestTimestamp: new Date(Number(receipt.requestTimestamp) * 1000),\n//               customer: receipt.recipient\n//             });\n//           }\n//         } catch (error) {\n//           console.error(`Error loading request ${id}:`, error);\n//         }\n//       }\n\n//       // Sort by request timestamp (newest first)\n//       pendingDetails.sort((a, b) => b.requestTimestamp - a.requestTimestamp);\n//       allDetails.sort((a, b) => b.requestTimestamp - a.requestTimestamp);\n\n//       setPendingRequests(pendingDetails);\n//       setAllRequests(allDetails);\n//     } catch (error) {\n//       console.error(\"Error loading business data:\", error);\n//       toast.error(\"Failed to load business data\");\n//     } finally {\n//       setLoading(false);\n//     }\n//   };\n\n//   const handleApprove = async (receiptId) => {\n//     try {\n//       setProcessingRequests(prev => new Set([...prev, receiptId]));\n      \n//       const tx = await contract.approveReceipt(receiptId);\n//       toast.loading('Approving receipt...', { id: `approve-${receiptId}` });\n      \n//       await waitForTransaction(tx.hash);\n      \n//       toast.success('Receipt approved successfully!', { id: `approve-${receiptId}` });\n      \n//       // Reload data\n//       await loadBusinessData();\n//     } catch (error) {\n//       console.error(\"Error approving receipt:\", error);\n//       toast.error(`Failed to approve receipt: ${error.reason || error.message}`, { id: `approve-${receiptId}` });\n//     } finally {\n//       setProcessingRequests(prev => {\n//         const newSet = new Set(prev);\n//         newSet.delete(receiptId);\n//         return newSet;\n//       });\n//     }\n//   };\n\n//   const handleReject = async (receiptId, reason = \"Request rejected by business\") => {\n//     try {\n//       setProcessingRequests(prev => new Set([...prev, receiptId]));\n      \n//       const tx = await contract.rejectReceipt(receiptId, reason);\n//       toast.loading('Rejecting receipt...', { id: `reject-${receiptId}` });\n      \n//       await waitForTransaction(tx.hash);\n      \n//       toast.success('Receipt rejected successfully!', { id: `reject-${receiptId}` });\n      \n//       // Reload data\n//       await loadBusinessData();\n//     } catch (error) {\n//       console.error(\"Error rejecting receipt:\", error);\n//       toast.error(`Failed to reject receipt: ${error.reason || error.message}`, { id: `reject-${receiptId}` });\n//     } finally {\n//       setProcessingRequests(prev => {\n//         const newSet = new Set(prev);\n//         newSet.delete(receiptId);\n//         return newSet;\n//       });\n//     }\n//   };\n\n//   const formatDate = (date) => {\n//     return date.toLocaleDateString() + ' ' + date.toLocaleTimeString([], { hour: '2-digit', minute: '2-digit' });\n//   };\n\n//   const getStatusIcon = (status) => {\n//     switch (status) {\n//       case 0: return <Clock className=\"h-4 w-4 text-yellow-500\" />;\n//       case 1: return <CheckCircle className=\"h-4 w-4 text-blue-500\" />;\n//       case 2: return <XCircle className=\"h-4 w-4 text-red-500\" />;\n//       case 3: return <CheckCircle className=\"h-4 w-4 text-green-500\" />;\n//       default: return <Clock className=\"h-4 w-4 text-gray-500\" />;\n//     }\n//   };\n\n//   const getStatusColor = (status) => {\n//     const colorMap = {\n//       0: 'bg-yellow-100 text-yellow-800',\n//       1: 'bg-blue-100 text-blue-800',\n//       2: 'bg-red-100 text-red-800',\n//       3: 'bg-green-100 text-green-800'\n//     };\n//     return colorMap[status] || 'bg-gray-100 text-gray-800';\n//   };\n\n//   const pendingCount = pendingRequests.length;\n//   const approvedCount = allRequests.filter(r => r.status === 1 || r.status === 3).length;\n//   const rejectedCount = allRequests.filter(r => r.status === 2).length;\n\n//   return (\n//     <>\n//       <BusinessNavbar />\n//       <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8 space-y-8\">\n//       {/* Header */}\n//       <div className=\"flex items-center justify-between\">\n//         <div>\n//           <h1 className=\"text-3xl font-bold text-gray-900 flex items-center space-x-3\">\n//             <Building2 className=\"h-8 w-8 text-blue-600\" />\n//             <span>Business Portal</span>\n//           </h1>\n//           <p className=\"mt-2 text-gray-600\">\n//             Review and verify customer receipt requests\n//           </p>\n//           <div className=\"mt-2 flex items-center space-x-2\">\n//             <CheckCircle className=\"h-4 w-4 text-green-500\" />\n//             <span className=\"text-sm text-gray-500\">Verified Business - Pre-approved Status</span>\n//           </div>\n//         </div>\n//         <div className=\"text-right\">\n//           <p className=\"text-sm text-gray-500\">Business Address</p>\n//           <p className=\"font-mono text-sm\">{formatAddress(BUSINESS_ADDRESS)}</p>\n//         </div>\n//       </div>\n\n//       {/* Stats Cards */}\n//       <div className=\"grid grid-cols-1 md:grid-cols-4 gap-6\">\n//         <div className=\"card\">\n//           <div className=\"flex items-center\">\n//             <div className=\"p-2 bg-yellow-100 rounded-lg\">\n//               <Clock className=\"h-6 w-6 text-yellow-600\" />\n//             </div>\n//             <div className=\"ml-4\">\n//               <p className=\"text-sm font-medium text-gray-600\">Pending Requests</p>\n//               <p className=\"text-2xl font-bold text-gray-900\">{pendingCount}</p>\n//             </div>\n//           </div>\n//         </div>\n\n//         <div className=\"card\">\n//           <div className=\"flex items-center\">\n//             <div className=\"p-2 bg-green-100 rounded-lg\">\n//               <CheckCircle className=\"h-6 w-6 text-green-600\" />\n//             </div>\n//             <div className=\"ml-4\">\n//               <p className=\"text-sm font-medium text-gray-600\">Approved</p>\n//               <p className=\"text-2xl font-bold text-gray-900\">{approvedCount}</p>\n//             </div>\n//           </div>\n//         </div>\n\n//         <div className=\"card\">\n//           <div className=\"flex items-center\">\n//             <div className=\"p-2 bg-red-100 rounded-lg\">\n//               <XCircle className=\"h-6 w-6 text-red-600\" />\n//             </div>\n//             <div className=\"ml-4\">\n//               <p className=\"text-sm font-medium text-gray-600\">Rejected</p>\n//               <p className=\"text-2xl font-bold text-gray-900\">{rejectedCount}</p>\n//             </div>\n//           </div>\n//         </div>\n\n//         <div className=\"card\">\n//           <div className=\"flex items-center\">\n//             <div className=\"p-2 bg-blue-100 rounded-lg\">\n//               <Receipt className=\"h-6 w-6 text-blue-600\" />\n//             </div>\n//             <div className=\"ml-4\">\n//               <p className=\"text-sm font-medium text-gray-600\">Total Requests</p>\n//               <p className=\"text-2xl font-bold text-gray-900\">{allRequests.length}</p>\n//             </div>\n//           </div>\n//         </div>\n//       </div>\n\n//       {/* Tabs */}\n//       <div className=\"bg-white rounded-lg shadow\">\n//         <div className=\"border-b border-gray-200\">\n//           <nav className=\"-mb-px flex space-x-8 px-6\">\n//             <button\n//               onClick={() => setActiveTab('pending')}\n//               className={`py-4 px-1 border-b-2 font-medium text-sm ${\n//                 activeTab === 'pending'\n//                   ? 'border-blue-500 text-blue-600'\n//                   : 'border-transparent text-gray-500 hover:text-gray-700 hover:border-gray-300'\n//               }`}\n//             >\n//               Pending Requests ({pendingCount})\n//             </button>\n//             <button\n//               onClick={() => setActiveTab('all')}\n//               className={`py-4 px-1 border-b-2 font-medium text-sm ${\n//                 activeTab === 'all'\n//                   ? 'border-blue-500 text-blue-600'\n//                   : 'border-transparent text-gray-500 hover:text-gray-700 hover:border-gray-300'\n//               }`}\n//             >\n//               All Requests ({allRequests.length})\n//             </button>\n//           </nav>\n//         </div>\n\n//         {/* Content */}\n//         <div className=\"p-6\">\n//           {loading ? (\n//             <div className=\"text-center py-8\">\n//               <div className=\"animate-spin rounded-full h-8 w-8 border-b-2 border-blue-600 mx-auto\"></div>\n//               <p className=\"mt-2 text-gray-600\">Loading requests...</p>\n//             </div>\n//           ) : (\n//             <>\n//               {activeTab === 'pending' && (\n//                 <>\n//                   {pendingRequests.length === 0 ? (\n//                     <div className=\"text-center py-8\">\n//                       <Clock className=\"h-12 w-12 text-gray-400 mx-auto mb-4\" />\n//                       <h3 className=\"text-lg font-medium text-gray-900 mb-2\">No pending requests</h3>\n//                       <p className=\"text-gray-600\">All receipt requests have been processed.</p>\n//                     </div>\n//                   ) : (\n//                     <div className=\"space-y-4\">\n//                       {pendingRequests.map((request) => (\n//                         <div key={request.id} className=\"border border-gray-200 rounded-lg p-6\">\n//                           <div className=\"flex justify-between items-start\">\n//                             <div className=\"flex-1\">\n//                               <div className=\"flex items-center space-x-2 mb-2\">\n//                                 <h3 className=\"text-lg font-medium text-gray-900\">\n//                                   Receipt Request #{request.id}\n//                                 </h3>\n//                                 <span className={`inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium ${getStatusColor(request.status)}`}>\n//                                   {getStatusIcon(request.status)}\n//                                   <span className=\"ml-1\">{RECEIPT_STATUS[request.status]}</span>\n//                                 </span>\n//                               </div>\n                              \n//                               <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4 mb-4\">\n//                                 <div>\n//                                   <p className=\"text-sm text-gray-600\">Customer</p>\n//                                   <p className=\"font-mono text-sm\">{formatAddress(request.customer)}</p>\n//                                 </div>\n//                                 <div>\n//                                   <p className=\"text-sm text-gray-600\">Amount</p>\n//                                   <p className=\"text-lg font-semibold\">{formatEther(request.amount)} ETH</p>\n//                                 </div>\n//                                 <div>\n//                                   <p className=\"text-sm text-gray-600\">Transaction Date</p>\n//                                   <p>{formatDate(request.transactionDate)}</p>\n//                                 </div>\n//                                 <div>\n//                                   <p className=\"text-sm text-gray-600\">Requested</p>\n//                                   <p>{formatDate(request.requestTimestamp)}</p>\n//                                 </div>\n//                               </div>\n                              \n//                               {request.description && (\n//                                 <div className=\"mb-4\">\n//                                   <p className=\"text-sm text-gray-600\">Description</p>\n//                                   <p className=\"text-gray-900\">{request.description}</p>\n//                                 </div>\n//                               )}\n//                             </div>\n//                           </div>\n                          \n//                           <div className=\"flex space-x-3 mt-4\">\n//                             <button\n//                               onClick={() => handleApprove(request.id)}\n//                               disabled={processingRequests.has(request.id)}\n//                               className=\"btn-primary flex items-center space-x-2 disabled:opacity-50 disabled:cursor-not-allowed\"\n//                             >\n//                               <CheckCircle className=\"h-4 w-4\" />\n//                               <span>Approve</span>\n//                             </button>\n//                             <button\n//                               onClick={() => handleReject(request.id)}\n//                               disabled={processingRequests.has(request.id)}\n//                               className=\"btn-secondary flex items-center space-x-2 disabled:opacity-50 disabled:cursor-not-allowed\"\n//                             >\n//                               <XCircle className=\"h-4 w-4\" />\n//                               <span>Reject</span>\n//                             </button>\n//                           </div>\n//                         </div>\n//                       ))}\n//                     </div>\n//                   )}\n//                 </>\n//               )}\n\n//               {activeTab === 'all' && (\n//                 <>\n//                   {allRequests.length === 0 ? (\n//                     <div className=\"text-center py-8\">\n//                       <Receipt className=\"h-12 w-12 text-gray-400 mx-auto mb-4\" />\n//                       <h3 className=\"text-lg font-medium text-gray-900 mb-2\">No requests yet</h3>\n//                       <p className=\"text-gray-600\">Customer receipt requests will appear here.</p>\n//                     </div>\n//                   ) : (\n//                     <div className=\"overflow-hidden\">\n//                       <table className=\"min-w-full divide-y divide-gray-200\">\n//                         <thead className=\"bg-gray-50\">\n//                           <tr>\n//                             <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n//                               Request ID\n//                             </th>\n//                             <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n//                               Customer\n//                             </th>\n//                             <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n//                               Amount\n//                             </th>\n//                             <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n//                               Status\n//                             </th>\n//                             <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n//                               Requested\n//                             </th>\n//                           </tr>\n//                         </thead>\n//                         <tbody className=\"bg-white divide-y divide-gray-200\">\n//                           {allRequests.map((request) => (\n//                             <tr key={request.id} className=\"hover:bg-gray-50\">\n//                               <td className=\"px-6 py-4 whitespace-nowrap\">\n//                                 <div className=\"text-sm font-medium text-gray-900\">\n//                                   #{request.id}\n//                                 </div>\n//                                 <div className=\"text-sm text-gray-500\">\n//                                   {request.description || 'No description'}\n//                                 </div>\n//                               </td>\n//                               <td className=\"px-6 py-4 whitespace-nowrap\">\n//                                 <div className=\"text-sm font-mono text-gray-900\">\n//                                   {formatAddress(request.customer)}\n//                                 </div>\n//                               </td>\n//                               <td className=\"px-6 py-4 whitespace-nowrap\">\n//                                 <div className=\"text-sm font-medium text-gray-900\">\n//                                   {formatEther(request.amount)} ETH\n//                                 </div>\n//                               </td>\n//                               <td className=\"px-6 py-4 whitespace-nowrap\">\n//                                 <span className={`inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium ${getStatusColor(request.status)}`}>\n//                                   {getStatusIcon(request.status)}\n//                                   <span className=\"ml-1\">{RECEIPT_STATUS[request.status]}</span>\n//                                 </span>\n//                               </td>\n//                               <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500\">\n//                                 {formatDate(request.requestTimestamp)}\n//                               </td>\n//                             </tr>\n//                           ))}\n//                         </tbody>\n//                       </table>\n//                     </div>\n//                   )}\n//                 </>\n//               )}\n//             </>\n//           )}\n//         </div>\n//       </div>\n//       </div>\n//     </>\n//   );\n// };\n\n// export default BusinessPortal;\n\n\nimport React, { useState, useEffect } from 'react';\nimport { useWeb3 } from '../contexts/Web3Context';\nimport { RECEIPT_STATUS } from '../config/contract';\nimport { \n  Receipt, \n  CheckCircle, \n  XCircle, \n  AlertTriangle, \n  Clock, \n  AlertCircle \n} from 'lucide-react';\nimport toast from 'react-hot-toast';\n\nconst BusinessPortal = () => {\n  const { contract, account, formatEther } = useWeb3();\n  const [pendingReceipts, setPendingReceipts] = useState([]);\n  const [allReceipts, setAllReceipts] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [isRejectModalOpen, setIsRejectModalOpen] = useState(false);\n  const [rejectionReason, setRejectionReason] = useState('');\n  const [rejectionError, setRejectionError] = useState('');\n  const [selectedReceiptId, setSelectedReceiptId] = useState(null);\n  const [isDisputeModalOpen, setIsDisputeModalOpen] = useState(false);\n  const [disputeReason, setDisputeReason] = useState('');\n  const [disputeError, setDisputeError] = useState('');\n\n  useEffect(() => {\n    if (contract && account) {\n      loadReceipts();\n    }\n  }, [contract, account]);\n\n  const loadReceipts = async () => {\n    try {\n      setLoading(true);\n      const receiptCount = Number(await contract.getReceiptCount());\n      const pending = [];\n      const all = [];\n\n      const blockTimestamp = Math.floor(Date.now() / 1000);\n\n      for (let i = 1; i <= receiptCount; i++) {\n        const receipt = await contract.getReceipt(i);\n        if (receipt.exists && receipt.issuer.toLowerCase() === account.toLowerCase()) {\n          const isExpired = receipt.status === 0 && blockTimestamp > Number(receipt.deadline);\n          const receiptData = {\n            id: Number(receipt.id),\n            vendorName: receipt.vendorName,\n            description: receipt.description,\n            amount: formatEther(receipt.amount),\n            status: isExpired ? 6 : Number(receipt.status),\n            transactionDate: new Date(Number(receipt.transactionDate) * 1000),\n            requestTimestamp: new Date(Number(receipt.requestTimestamp) * 1000),\n            deadline: new Date(Number(receipt.deadline) * 1000),\n            customer: receipt.recipient,\n            rejectionReason: receipt.rejectionReason || '',\n            disputeReason: receipt.disputeReason || ''\n          };\n\n          all.push(receiptData);\n          if (receiptData.status === 0 && !isExpired) {\n            pending.push(receiptData);\n          }\n        }\n      }\n\n      setPendingReceipts(pending);\n      setAllReceipts(all);\n    } catch (error) {\n      console.error('Error loading receipts:', error);\n      toast.error('Failed to load receipts');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const handleApproveReceipt = async (receiptId) => {\n    try {\n      const tx = await contract.approveReceipt(receiptId);\n      toast.loading('Approving receipt...', { id: 'approve' });\n      await tx.wait();\n      toast.success('Receipt approved successfully!', { id: 'approve' });\n      await loadReceipts();\n    } catch (error) {\n      console.error('Error approving receipt:', error);\n      toast.error(error.reason || 'Failed to approve receipt', { id: 'approve' });\n    }\n  };\n\n  const openRejectModal = (receiptId) => {\n    setSelectedReceiptId(receiptId);\n    setRejectionReason('');\n    setRejectionError('');\n    setIsRejectModalOpen(true);\n  };\n\n  const closeRejectModal = () => {\n    setIsRejectModalOpen(false);\n    setRejectionReason('');\n    setRejectionError('');\n    setSelectedReceiptId(null);\n  };\n\n  const handleRejectReceipt = async () => {\n    if (!rejectionReason.trim()) {\n      setRejectionError('Rejection reason cannot be empty');\n      return;\n    }\n\n    try {\n      const tx = await contract.rejectReceipt(selectedReceiptId, rejectionReason.trim());\n      toast.loading('Rejecting receipt...', { id: 'reject' });\n      await tx.wait();\n      toast.success('Receipt rejected successfully!', { id: 'reject' });\n      await loadReceipts();\n      closeRejectModal();\n    } catch (error) {\n      console.error('Error rejecting receipt:', error);\n      toast.error(error.reason || 'Failed to reject receipt', { id: 'reject' });\n    }\n  };\n\n  const openDisputeModal = (receiptId) => {\n    setSelectedReceiptId(receiptId);\n    setDisputeReason('');\n    setDisputeError('');\n    setIsDisputeModalOpen(true);\n  };\n\n  const closeDisputeModal = () => {\n    setIsDisputeModalOpen(false);\n    setDisputeReason('');\n    setDisputeError('');\n    setSelectedReceiptId(null);\n  };\n\n  const handleDisputeReceipt = async () => {\n    if (!disputeReason.trim()) {\n      setDisputeError('Dispute reason cannot be empty');\n      return;\n    }\n\n    try {\n      const tx = await contract.disputeReceipt(selectedReceiptId, disputeReason.trim());\n      toast.loading('Disputing receipt...', { id: 'dispute' });\n      await tx.wait();\n      toast.success('Receipt disputed successfully!', { id: 'dispute' });\n      await loadReceipts();\n      closeDisputeModal();\n    } catch (error) {\n      console.error('Error disputing receipt:', error);\n      toast.error(error.reason || 'Failed to dispute receipt', { id: 'dispute' });\n    }\n  };\n\n  const canDispute = (receipt) => {\n    return receipt.status === 1 || receipt.status === 2 || receipt.status === 3;\n  };\n\n  const formatDate = (date) => {\n    return date.toLocaleDateString() + ' ' + date.toLocaleTimeString([], { hour: '2-digit', minute: '2-digit' });\n  };\n\n  const getStatusIcon = (status) => {\n    switch (status) {\n      case 0: return <Clock className=\"h-4 w-4 text-yellow-500\" />;\n      case 1: return <CheckCircle className=\"h-4 w-4 text-blue-500\" />;\n      case 2: return <XCircle className=\"h-4 w-4 text-red-500\" />;\n      case 3: return <CheckCircle className=\"h-4 w-4 text-green-500\" />;\n      case 4: return <AlertTriangle className=\"h-4 w-4 text-orange-500\" />;\n      case 5: return <XCircle className=\"h-4 w-4 text-gray-500\" />;\n      case 6: return <AlertCircle className=\"h-4 w-4 text-gray-500\" />;\n      default: return null;\n    }\n  };\n\n  const getStatusColor = (status) => {\n    const colorMap = {\n      0: 'bg-yellow-100 text-yellow-800',\n      1: 'bg-blue-100 text-blue-800',\n      2: 'bg-red-100 text-red-800',\n      3: 'bg-green-100 text-green-800',\n      4: 'bg-orange-100 text-orange-800',\n      5: 'bg-gray-100 text-gray-800',\n      6: 'bg-gray-100 text-gray-800'\n    };\n    return colorMap[status] || 'bg-gray-100 text-gray-800';\n  };\n\n  if (loading) {\n    return (\n      <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8\">\n        <div className=\"text-center py-8\">\n          <div className=\"animate-spin rounded-full h-8 w-8 border-b-2 border-blue-600 mx-auto\"></div>\n          <p className=\"mt-2 text-gray-600\">Loading receipts...</p>\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8\">\n      <h1 className=\"text-2xl font-bold text-gray-900 mb-6\">Business Portal</h1>\n\n      <div className=\"mb-8\">\n        <h2 className=\"text-xl font-semibold text-gray-900 mb-4\">Pending Requests</h2>\n        {pendingReceipts.length === 0 ? (\n          <div className=\"text-center py-8\">\n            <Receipt className=\"h-12 w-12 text-gray-400 mx-auto mb-4\" />\n            <h3 className=\"text-lg font-medium text-gray-900 mb-2\">No pending receipts</h3>\n            <p className=\"text-gray-600\">There are no pending receipt requests at this time.</p>\n          </div>\n        ) : (\n          <div className=\"bg-white rounded-lg shadow overflow-hidden\">\n            <table className=\"min-w-full divide-y divide-gray-200\">\n              <thead className=\"bg-gray-50\">\n                <tr>\n                  <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase\">ID</th>\n                  <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase\">Customer</th>\n                  <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase\">Amount</th>\n                  <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase\">Description</th>\n                  <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase\">Requested</th>\n                  <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase\">Actions</th>\n                </tr>\n              </thead>\n              <tbody className=\"bg-white divide-y divide-gray-200\">\n                {pendingReceipts.map((receipt) => (\n                  <tr key={receipt.id}>\n                    <td className=\"px-6 py-4 whitespace-nowrap text-sm font-medium text-gray-900\">{receipt.id}</td>\n                    <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500\">{receipt.customer.slice(0, 6)}...{receipt.customer.slice(-4)}</td>\n                    <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500\">{receipt.amount} ETH</td>\n                    <td className=\"px-6 py-4 text-sm text-gray-500\">{receipt.description}</td>\n                    <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500\">{formatDate(receipt.requestTimestamp)}</td>\n                    <td className=\"px-6 py-4 whitespace-nowrap text-sm font-medium\">\n                      <button\n                        onClick={() => handleApproveReceipt(receipt.id)}\n                        className=\"text-blue-600 hover:text-blue-900 mr-4\"\n                      >\n                        Approve\n                      </button>\n                      <button\n                        onClick={() => openRejectModal(receipt.id)}\n                        className=\"text-red-600 hover:text-red-900\"\n                      >\n                        Reject\n                      </button>\n                    </td>\n                  </tr>\n                ))}\n              </tbody>\n            </table>\n          </div>\n        )}\n      </div>\n\n      <div>\n        <h2 className=\"text-xl font-semibold text-gray-900 mb-4\">All Requests</h2>\n        {allReceipts.length === 0 ? (\n          <div className=\"text-center py-8\">\n            <Receipt className=\"h-12 w-12 text-gray-400 mx-auto mb-4\" />\n            <h3 className=\"text-lg font-medium text-gray-900 mb-2\">No receipts</h3>\n            <p className=\"text-gray-600\">There are no receipts associated with this account.</p>\n          </div>\n        ) : (\n          <div className=\"bg-white rounded-lg shadow overflow-hidden\">\n            <table className=\"min-w-full divide-y divide-gray-200\">\n              <thead className=\"bg-gray-50\">\n                <tr>\n                  <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase\">ID</th>\n                  <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase\">Customer</th>\n                  <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase\">Amount</th>\n                  <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase\">Description</th>\n                  <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase\">Status</th>\n                  <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase\">Details</th>\n                  <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase\">Actions</th>\n                </tr>\n              </thead>\n              <tbody className=\"bg-white divide-y divide-gray-200\">\n                {allReceipts.map((receipt) => (\n                  <tr key={receipt.id}>\n                    <td className=\"px-6 py-4 whitespace-nowrap text-sm font-medium text-gray-900\">{receipt.id}</td>\n                    <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500\">{receipt.customer.slice(0, 6)}...{receipt.customer.slice(-4)}</td>\n                    <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500\">{receipt.amount} ETH</td>\n                    <td className=\"px-6 py-4 text-sm text-gray-500\">{receipt.description}</td>\n                    <td className=\"px-6 py-4 whitespace-nowrap\">\n                      <span className={`inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium ${getStatusColor(receipt.status)}`}>\n                        {getStatusIcon(receipt.status)}\n                        <span className=\"ml-1\">{RECEIPT_STATUS[receipt.status]}</span>\n                      </span>\n                    </td>\n                    <td className=\"px-6 py-4 text-sm text-gray-500\">\n                      {receipt.rejectionReason && receipt.status === 2 && (\n                        <p className=\"text-red-600\">Rejection Reason: {receipt.rejectionReason}</p>\n                      )}\n                      {receipt.disputeReason && receipt.status === 4 && (\n                        <p className=\"text-orange-600\">Dispute Reason: {receipt.disputeReason}</p>\n                      )}\n                    </td>\n                    <td className=\"px-6 py-4 whitespace-nowrap text-sm font-medium\">\n                      {canDispute(receipt) && (\n                        <button\n                          onClick={() => openDisputeModal(receipt.id)}\n                          className=\"text-orange-600 hover:text-orange-900\"\n                        >\n                          Dispute\n                        </button>\n                      )}\n                    </td>\n                  </tr>\n                ))}\n              </tbody>\n            </table>\n          </div>\n        )}\n      </div>\n\n      {/* Reject Receipt Modal */}\n      {isRejectModalOpen && (\n        <div className=\"fixed inset-0 bg-gray-600 bg-opacity-50 flex items-center justify-center z-50\">\n          <div className=\"bg-white rounded-lg shadow-lg p-6 w-full max-w-md\">\n            <h3 className=\"text-lg font-medium text-gray-900 mb-4\">Reject Receipt #{selectedReceiptId}</h3>\n            <div className=\"mb-4\">\n              <label htmlFor=\"rejectionReason\" className=\"block text-sm font-medium text-gray-700\">\n                Reason for Rejection\n              </label>\n              <textarea\n                id=\"rejectionReason\"\n                className=\"mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-blue-500 focus:ring-blue-500 sm:text-sm\"\n                rows=\"4\"\n                value={rejectionReason}\n                onChange={(e) => {\n                  setRejectionReason(e.target.value);\n                  setRejectionError('');\n                }}\n                placeholder=\"Enter the reason for rejecting this receipt\"\n              />\n              {rejectionError && (\n                <p className=\"mt-2 text-sm text-red-600\">{rejectionError}</p>\n              )}\n            </div>\n            <div className=\"flex justify-end space-x-3\">\n              <button\n                onClick={closeRejectModal}\n                className=\"px-4 py-2 text-sm font-medium text-gray-700 bg-gray-100 rounded-md hover:bg-gray-200\"\n              >\n                Cancel\n              </button>\n              <button\n                onClick={handleRejectReceipt}\n                className=\"px-4 py-2 text-sm font-medium text-white bg-red-600 rounded-md hover:bg-red-700\"\n              >\n                Confirm Rejection\n              </button>\n            </div>\n          </div>\n        </div>\n      )}\n\n      {/* Dispute Receipt Modal */}\n      {isDisputeModalOpen && (\n        <div className=\"fixed inset-0 bg-gray-600 bg-opacity-50 flex items-center justify-center z-50\">\n          <div className=\"bg-white rounded-lg shadow-lg p-6 w-full max-w-md\">\n            <h3 className=\"text-lg font-medium text-gray-900 mb-4\">Dispute Receipt #{selectedReceiptId}</h3>\n            <div className=\"mb-4\">\n              <label htmlFor=\"disputeReason\" className=\"block text-sm font-medium text-gray-700\">\n                Reason for Dispute\n              </label>\n              <textarea\n                id=\"disputeReason\"\n                className=\"mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-blue-500 focus:ring-blue-500 sm:text-sm\"\n                rows=\"4\"\n                value={disputeReason}\n                onChange={(e) => {\n                  setDisputeReason(e.target.value);\n                  setDisputeError('');\n                }}\n                placeholder=\"Enter the reason for disputing this receipt\"\n              />\n              {disputeError && (\n                <p className=\"mt-2 text-sm text-red-600\">{disputeError}</p>\n              )}\n            </div>\n            <div className=\"flex justify-end space-x-3\">\n              <button\n                onClick={closeDisputeModal}\n                className=\"px-4 py-2 text-sm font-medium text-gray-700 bg-gray-100 rounded-md hover:bg-gray-200\"\n              >\n                Cancel\n              </button>\n              <button\n                onClick={handleDisputeReceipt}\n                className=\"px-4 py-2 text-sm font-medium text-white bg-orange-600 rounded-md hover:bg-orange-700\"\n              >\n                Confirm Dispute\n              </button>\n            </div>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default BusinessPortal;\n"],"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}