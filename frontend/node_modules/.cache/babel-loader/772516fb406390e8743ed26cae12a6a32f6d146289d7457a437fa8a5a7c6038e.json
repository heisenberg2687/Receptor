{"ast":null,"code":"var _jsxFileName = \"/home/leo1305286/collab-web3/reverif/frontend/src/pages/BusinessPortal.jsx\",\n  _s = $RefreshSig$();\n// import React, { useState, useEffect } from 'react';\n// import { useWeb3 } from '../contexts/Web3Context';\n// import { RECEIPT_STATUS } from '../config/contract';\n// import BusinessNavbar from '../components/Layout/BusinessNavbar';\n// import { \n//   Building2, \n//   CheckCircle, \n//   XCircle, \n//   Clock,\n//   Eye,\n//   AlertCircle,\n//   TrendingUp,\n//   Receipt\n// } from 'lucide-react';\n// import toast from 'react-hot-toast';\n\n// const BusinessPortal = () => {\n//   const { \n//     contract, \n//     formatEther, \n//     formatAddress,\n//     waitForTransaction\n//   } = useWeb3();\n\n//   const [pendingRequests, setPendingRequests] = useState([]);\n//   const [allRequests, setAllRequests] = useState([]);\n//   const [loading, setLoading] = useState(true);\n//   const [activeTab, setActiveTab] = useState('pending');\n//   const [processingRequests, setProcessingRequests] = useState(new Set());\n\n//   // For testing purposes, we'll use a hardcoded business address\n//   // In a real scenario, this would be dynamically determined\n//   const BUSINESS_ADDRESS = \"0x70997970C51812dc3A010C7d01b50e0d17dc79C8\"; // Account #1 from Hardhat\n\n//   useEffect(() => {\n//     if (contract) {\n//       loadBusinessData();\n//     }\n//   }, [contract]);\n\n//   const loadBusinessData = async () => {\n//     try {\n//       setLoading(true);\n\n//       // Get pending requests for this business\n//       const pendingIds = await contract.getPendingRequests(BUSINESS_ADDRESS);\n\n//       // Get all business receipts\n//       const allReceiptIds = await contract.getBusinessReceipts(BUSINESS_ADDRESS);\n\n//       // Load pending request details\n//       const pendingDetails = [];\n//       for (let id of pendingIds) {\n//         try {\n//           const receipt = await contract.getReceipt(Number(id));\n//           if (receipt.exists) {\n//             pendingDetails.push({\n//               id: Number(receipt.id),\n//               vendorName: receipt.vendorName,\n//               description: receipt.description,\n//               amount: receipt.amount,\n//               status: Number(receipt.status),\n//               transactionDate: new Date(Number(receipt.transactionDate) * 1000),\n//               requestTimestamp: new Date(Number(receipt.requestTimestamp) * 1000),\n//               customer: receipt.recipient\n//             });\n//           }\n//         } catch (error) {\n//           console.error(`Error loading pending request ${id}:`, error);\n//         }\n//       }\n\n//       // Load all request details\n//       const allDetails = [];\n//       for (let id of allReceiptIds) {\n//         try {\n//           const receipt = await contract.getReceipt(Number(id));\n//           if (receipt.exists) {\n//             allDetails.push({\n//               id: Number(receipt.id),\n//               vendorName: receipt.vendorName,\n//               description: receipt.description,\n//               amount: receipt.amount,\n//               status: Number(receipt.status),\n//               transactionDate: new Date(Number(receipt.transactionDate) * 1000),\n//               requestTimestamp: new Date(Number(receipt.requestTimestamp) * 1000),\n//               customer: receipt.recipient\n//             });\n//           }\n//         } catch (error) {\n//           console.error(`Error loading request ${id}:`, error);\n//         }\n//       }\n\n//       // Sort by request timestamp (newest first)\n//       pendingDetails.sort((a, b) => b.requestTimestamp - a.requestTimestamp);\n//       allDetails.sort((a, b) => b.requestTimestamp - a.requestTimestamp);\n\n//       setPendingRequests(pendingDetails);\n//       setAllRequests(allDetails);\n//     } catch (error) {\n//       console.error(\"Error loading business data:\", error);\n//       toast.error(\"Failed to load business data\");\n//     } finally {\n//       setLoading(false);\n//     }\n//   };\n\n//   const handleApprove = async (receiptId) => {\n//     try {\n//       setProcessingRequests(prev => new Set([...prev, receiptId]));\n\n//       const tx = await contract.approveReceipt(receiptId);\n//       toast.loading('Approving receipt...', { id: `approve-${receiptId}` });\n\n//       await waitForTransaction(tx.hash);\n\n//       toast.success('Receipt approved successfully!', { id: `approve-${receiptId}` });\n\n//       // Reload data\n//       await loadBusinessData();\n//     } catch (error) {\n//       console.error(\"Error approving receipt:\", error);\n//       toast.error(`Failed to approve receipt: ${error.reason || error.message}`, { id: `approve-${receiptId}` });\n//     } finally {\n//       setProcessingRequests(prev => {\n//         const newSet = new Set(prev);\n//         newSet.delete(receiptId);\n//         return newSet;\n//       });\n//     }\n//   };\n\n//   const handleReject = async (receiptId, reason = \"Request rejected by business\") => {\n//     try {\n//       setProcessingRequests(prev => new Set([...prev, receiptId]));\n\n//       const tx = await contract.rejectReceipt(receiptId, reason);\n//       toast.loading('Rejecting receipt...', { id: `reject-${receiptId}` });\n\n//       await waitForTransaction(tx.hash);\n\n//       toast.success('Receipt rejected successfully!', { id: `reject-${receiptId}` });\n\n//       // Reload data\n//       await loadBusinessData();\n//     } catch (error) {\n//       console.error(\"Error rejecting receipt:\", error);\n//       toast.error(`Failed to reject receipt: ${error.reason || error.message}`, { id: `reject-${receiptId}` });\n//     } finally {\n//       setProcessingRequests(prev => {\n//         const newSet = new Set(prev);\n//         newSet.delete(receiptId);\n//         return newSet;\n//       });\n//     }\n//   };\n\n//   const formatDate = (date) => {\n//     return date.toLocaleDateString() + ' ' + date.toLocaleTimeString([], { hour: '2-digit', minute: '2-digit' });\n//   };\n\n//   const getStatusIcon = (status) => {\n//     switch (status) {\n//       case 0: return <Clock className=\"h-4 w-4 text-yellow-500\" />;\n//       case 1: return <CheckCircle className=\"h-4 w-4 text-blue-500\" />;\n//       case 2: return <XCircle className=\"h-4 w-4 text-red-500\" />;\n//       case 3: return <CheckCircle className=\"h-4 w-4 text-green-500\" />;\n//       default: return <Clock className=\"h-4 w-4 text-gray-500\" />;\n//     }\n//   };\n\n//   const getStatusColor = (status) => {\n//     const colorMap = {\n//       0: 'bg-yellow-100 text-yellow-800',\n//       1: 'bg-blue-100 text-blue-800',\n//       2: 'bg-red-100 text-red-800',\n//       3: 'bg-green-100 text-green-800'\n//     };\n//     return colorMap[status] || 'bg-gray-100 text-gray-800';\n//   };\n\n//   const pendingCount = pendingRequests.length;\n//   const approvedCount = allRequests.filter(r => r.status === 1 || r.status === 3).length;\n//   const rejectedCount = allRequests.filter(r => r.status === 2).length;\n\n//   return (\n//     <>\n//       <BusinessNavbar />\n//       <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8 space-y-8\">\n//       {/* Header */}\n//       <div className=\"flex items-center justify-between\">\n//         <div>\n//           <h1 className=\"text-3xl font-bold text-gray-900 flex items-center space-x-3\">\n//             <Building2 className=\"h-8 w-8 text-blue-600\" />\n//             <span>Business Portal</span>\n//           </h1>\n//           <p className=\"mt-2 text-gray-600\">\n//             Review and verify customer receipt requests\n//           </p>\n//           <div className=\"mt-2 flex items-center space-x-2\">\n//             <CheckCircle className=\"h-4 w-4 text-green-500\" />\n//             <span className=\"text-sm text-gray-500\">Verified Business - Pre-approved Status</span>\n//           </div>\n//         </div>\n//         <div className=\"text-right\">\n//           <p className=\"text-sm text-gray-500\">Business Address</p>\n//           <p className=\"font-mono text-sm\">{formatAddress(BUSINESS_ADDRESS)}</p>\n//         </div>\n//       </div>\n\n//       {/* Stats Cards */}\n//       <div className=\"grid grid-cols-1 md:grid-cols-4 gap-6\">\n//         <div className=\"card\">\n//           <div className=\"flex items-center\">\n//             <div className=\"p-2 bg-yellow-100 rounded-lg\">\n//               <Clock className=\"h-6 w-6 text-yellow-600\" />\n//             </div>\n//             <div className=\"ml-4\">\n//               <p className=\"text-sm font-medium text-gray-600\">Pending Requests</p>\n//               <p className=\"text-2xl font-bold text-gray-900\">{pendingCount}</p>\n//             </div>\n//           </div>\n//         </div>\n\n//         <div className=\"card\">\n//           <div className=\"flex items-center\">\n//             <div className=\"p-2 bg-green-100 rounded-lg\">\n//               <CheckCircle className=\"h-6 w-6 text-green-600\" />\n//             </div>\n//             <div className=\"ml-4\">\n//               <p className=\"text-sm font-medium text-gray-600\">Approved</p>\n//               <p className=\"text-2xl font-bold text-gray-900\">{approvedCount}</p>\n//             </div>\n//           </div>\n//         </div>\n\n//         <div className=\"card\">\n//           <div className=\"flex items-center\">\n//             <div className=\"p-2 bg-red-100 rounded-lg\">\n//               <XCircle className=\"h-6 w-6 text-red-600\" />\n//             </div>\n//             <div className=\"ml-4\">\n//               <p className=\"text-sm font-medium text-gray-600\">Rejected</p>\n//               <p className=\"text-2xl font-bold text-gray-900\">{rejectedCount}</p>\n//             </div>\n//           </div>\n//         </div>\n\n//         <div className=\"card\">\n//           <div className=\"flex items-center\">\n//             <div className=\"p-2 bg-blue-100 rounded-lg\">\n//               <Receipt className=\"h-6 w-6 text-blue-600\" />\n//             </div>\n//             <div className=\"ml-4\">\n//               <p className=\"text-sm font-medium text-gray-600\">Total Requests</p>\n//               <p className=\"text-2xl font-bold text-gray-900\">{allRequests.length}</p>\n//             </div>\n//           </div>\n//         </div>\n//       </div>\n\n//       {/* Tabs */}\n//       <div className=\"bg-white rounded-lg shadow\">\n//         <div className=\"border-b border-gray-200\">\n//           <nav className=\"-mb-px flex space-x-8 px-6\">\n//             <button\n//               onClick={() => setActiveTab('pending')}\n//               className={`py-4 px-1 border-b-2 font-medium text-sm ${\n//                 activeTab === 'pending'\n//                   ? 'border-blue-500 text-blue-600'\n//                   : 'border-transparent text-gray-500 hover:text-gray-700 hover:border-gray-300'\n//               }`}\n//             >\n//               Pending Requests ({pendingCount})\n//             </button>\n//             <button\n//               onClick={() => setActiveTab('all')}\n//               className={`py-4 px-1 border-b-2 font-medium text-sm ${\n//                 activeTab === 'all'\n//                   ? 'border-blue-500 text-blue-600'\n//                   : 'border-transparent text-gray-500 hover:text-gray-700 hover:border-gray-300'\n//               }`}\n//             >\n//               All Requests ({allRequests.length})\n//             </button>\n//           </nav>\n//         </div>\n\n//         {/* Content */}\n//         <div className=\"p-6\">\n//           {loading ? (\n//             <div className=\"text-center py-8\">\n//               <div className=\"animate-spin rounded-full h-8 w-8 border-b-2 border-blue-600 mx-auto\"></div>\n//               <p className=\"mt-2 text-gray-600\">Loading requests...</p>\n//             </div>\n//           ) : (\n//             <>\n//               {activeTab === 'pending' && (\n//                 <>\n//                   {pendingRequests.length === 0 ? (\n//                     <div className=\"text-center py-8\">\n//                       <Clock className=\"h-12 w-12 text-gray-400 mx-auto mb-4\" />\n//                       <h3 className=\"text-lg font-medium text-gray-900 mb-2\">No pending requests</h3>\n//                       <p className=\"text-gray-600\">All receipt requests have been processed.</p>\n//                     </div>\n//                   ) : (\n//                     <div className=\"space-y-4\">\n//                       {pendingRequests.map((request) => (\n//                         <div key={request.id} className=\"border border-gray-200 rounded-lg p-6\">\n//                           <div className=\"flex justify-between items-start\">\n//                             <div className=\"flex-1\">\n//                               <div className=\"flex items-center space-x-2 mb-2\">\n//                                 <h3 className=\"text-lg font-medium text-gray-900\">\n//                                   Receipt Request #{request.id}\n//                                 </h3>\n//                                 <span className={`inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium ${getStatusColor(request.status)}`}>\n//                                   {getStatusIcon(request.status)}\n//                                   <span className=\"ml-1\">{RECEIPT_STATUS[request.status]}</span>\n//                                 </span>\n//                               </div>\n\n//                               <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4 mb-4\">\n//                                 <div>\n//                                   <p className=\"text-sm text-gray-600\">Customer</p>\n//                                   <p className=\"font-mono text-sm\">{formatAddress(request.customer)}</p>\n//                                 </div>\n//                                 <div>\n//                                   <p className=\"text-sm text-gray-600\">Amount</p>\n//                                   <p className=\"text-lg font-semibold\">{formatEther(request.amount)} ETH</p>\n//                                 </div>\n//                                 <div>\n//                                   <p className=\"text-sm text-gray-600\">Transaction Date</p>\n//                                   <p>{formatDate(request.transactionDate)}</p>\n//                                 </div>\n//                                 <div>\n//                                   <p className=\"text-sm text-gray-600\">Requested</p>\n//                                   <p>{formatDate(request.requestTimestamp)}</p>\n//                                 </div>\n//                               </div>\n\n//                               {request.description && (\n//                                 <div className=\"mb-4\">\n//                                   <p className=\"text-sm text-gray-600\">Description</p>\n//                                   <p className=\"text-gray-900\">{request.description}</p>\n//                                 </div>\n//                               )}\n//                             </div>\n//                           </div>\n\n//                           <div className=\"flex space-x-3 mt-4\">\n//                             <button\n//                               onClick={() => handleApprove(request.id)}\n//                               disabled={processingRequests.has(request.id)}\n//                               className=\"btn-primary flex items-center space-x-2 disabled:opacity-50 disabled:cursor-not-allowed\"\n//                             >\n//                               <CheckCircle className=\"h-4 w-4\" />\n//                               <span>Approve</span>\n//                             </button>\n//                             <button\n//                               onClick={() => handleReject(request.id)}\n//                               disabled={processingRequests.has(request.id)}\n//                               className=\"btn-secondary flex items-center space-x-2 disabled:opacity-50 disabled:cursor-not-allowed\"\n//                             >\n//                               <XCircle className=\"h-4 w-4\" />\n//                               <span>Reject</span>\n//                             </button>\n//                           </div>\n//                         </div>\n//                       ))}\n//                     </div>\n//                   )}\n//                 </>\n//               )}\n\n//               {activeTab === 'all' && (\n//                 <>\n//                   {allRequests.length === 0 ? (\n//                     <div className=\"text-center py-8\">\n//                       <Receipt className=\"h-12 w-12 text-gray-400 mx-auto mb-4\" />\n//                       <h3 className=\"text-lg font-medium text-gray-900 mb-2\">No requests yet</h3>\n//                       <p className=\"text-gray-600\">Customer receipt requests will appear here.</p>\n//                     </div>\n//                   ) : (\n//                     <div className=\"overflow-hidden\">\n//                       <table className=\"min-w-full divide-y divide-gray-200\">\n//                         <thead className=\"bg-gray-50\">\n//                           <tr>\n//                             <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n//                               Request ID\n//                             </th>\n//                             <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n//                               Customer\n//                             </th>\n//                             <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n//                               Amount\n//                             </th>\n//                             <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n//                               Status\n//                             </th>\n//                             <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n//                               Requested\n//                             </th>\n//                           </tr>\n//                         </thead>\n//                         <tbody className=\"bg-white divide-y divide-gray-200\">\n//                           {allRequests.map((request) => (\n//                             <tr key={request.id} className=\"hover:bg-gray-50\">\n//                               <td className=\"px-6 py-4 whitespace-nowrap\">\n//                                 <div className=\"text-sm font-medium text-gray-900\">\n//                                   #{request.id}\n//                                 </div>\n//                                 <div className=\"text-sm text-gray-500\">\n//                                   {request.description || 'No description'}\n//                                 </div>\n//                               </td>\n//                               <td className=\"px-6 py-4 whitespace-nowrap\">\n//                                 <div className=\"text-sm font-mono text-gray-900\">\n//                                   {formatAddress(request.customer)}\n//                                 </div>\n//                               </td>\n//                               <td className=\"px-6 py-4 whitespace-nowrap\">\n//                                 <div className=\"text-sm font-medium text-gray-900\">\n//                                   {formatEther(request.amount)} ETH\n//                                 </div>\n//                               </td>\n//                               <td className=\"px-6 py-4 whitespace-nowrap\">\n//                                 <span className={`inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium ${getStatusColor(request.status)}`}>\n//                                   {getStatusIcon(request.status)}\n//                                   <span className=\"ml-1\">{RECEIPT_STATUS[request.status]}</span>\n//                                 </span>\n//                               </td>\n//                               <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500\">\n//                                 {formatDate(request.requestTimestamp)}\n//                               </td>\n//                             </tr>\n//                           ))}\n//                         </tbody>\n//                       </table>\n//                     </div>\n//                   )}\n//                 </>\n//               )}\n//             </>\n//           )}\n//         </div>\n//       </div>\n//       </div>\n//     </>\n//   );\n// };\n\n// export default BusinessPortal;\n\nimport React, { useState, useEffect } from 'react';\nimport { useWeb3 } from '../contexts/Web3Context';\nimport { RECEIPT_STATUS } from '../config/contract';\nimport BusinessNavbar from '../components/Layout/BusinessNavbar';\nimport { Building2, CheckCircle, XCircle, Clock, Eye, AlertCircle, TrendingUp, Receipt } from 'lucide-react';\nimport toast from 'react-hot-toast';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst BusinessPortal = () => {\n  _s();\n  const {\n    contract,\n    formatEther,\n    formatAddress,\n    waitForTransaction\n  } = useWeb3();\n  const [pendingRequests, setPendingRequests] = useState([]);\n  const [allRequests, setAllRequests] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [activeTab, setActiveTab] = useState('pending');\n  const [processingRequests, setProcessingRequests] = useState(new Set());\n  // State for rejection modal\n  const [isRejectModalOpen, setIsRejectModalOpen] = useState(false);\n  const [rejectReceiptId, setRejectReceiptId] = useState(null);\n  const [rejectionReason, setRejectionReason] = useState('');\n  const [rejectionError, setRejectionError] = useState('');\n\n  // For testing purposes, we'll use a hardcoded business address\n  // In a real scenario, this would be dynamically determined\n  const BUSINESS_ADDRESS = \"0x70997970C51812dc3A010C7d01b50e0d17dc79C8\"; // Account #1 from Hardhat\n\n  useEffect(() => {\n    if (contract) {\n      loadBusinessData();\n    }\n  }, [contract]);\n  const loadBusinessData = async () => {\n    try {\n      setLoading(true);\n\n      // Get pending requests for this business\n      const pendingIds = await contract.getPendingRequests(BUSINESS_ADDRESS);\n\n      // Get all business receipts\n      const allReceiptIds = await contract.getBusinessReceipts(BUSINESS_ADDRESS);\n\n      // Get current block timestamp for deadline checks\n      const blockTimestamp = Math.floor(Date.now() / 1000); // Current time in seconds\n\n      // Load pending request details\n      const pendingDetails = [];\n      for (let id of pendingIds) {\n        try {\n          const receipt = await contract.getReceipt(Number(id));\n          if (receipt.exists) {\n            // Check if receipt is expired (Requested and past deadline)\n            const isExpired = receipt.status === 0 && blockTimestamp > receipt.deadline.toNumber();\n            pendingDetails.push({\n              id: Number(receipt.id),\n              vendorName: receipt.vendorName,\n              description: receipt.description,\n              amount: receipt.amount,\n              status: isExpired ? 6 : Number(receipt.status),\n              // Use Expired (6) if past deadline\n              transactionDate: new Date(Number(receipt.transactionDate) * 1000),\n              requestTimestamp: new Date(Number(receipt.requestTimestamp) * 1000),\n              deadline: new Date(Number(receipt.deadline) * 1000),\n              customer: receipt.recipient,\n              rejectionReason: receipt.rejectionReason || '',\n              disputeReason: receipt.disputeReason || ''\n            });\n          }\n        } catch (error) {\n          console.error(`Error loading pending request ${id}:`, error);\n        }\n      }\n\n      // Load all request details\n      const allDetails = [];\n      for (let id of allReceiptIds) {\n        try {\n          const receipt = await contract.getReceipt(Number(id));\n          if (receipt.exists) {\n            // Check if receipt is expired (Requested and past deadline)\n            const isExpired = receipt.status === 0 && blockTimestamp > receipt.deadline.toNumber();\n            allDetails.push({\n              id: Number(receipt.id),\n              vendorName: receipt.vendorName,\n              description: receipt.description,\n              amount: receipt.amount,\n              status: isExpired ? 6 : Number(receipt.status),\n              // Use Expired (6) if past deadline\n              transactionDate: new Date(Number(receipt.transactionDate) * 1000),\n              requestTimestamp: new Date(Number(receipt.requestTimestamp) * 1000),\n              deadline: new Date(Number(receipt.deadline) * 1000),\n              customer: receipt.recipient,\n              rejectionReason: receipt.rejectionReason || '',\n              disputeReason: receipt.disputeReason || ''\n            });\n          }\n        } catch (error) {\n          console.error(`Error loading request ${id}:`, error);\n        }\n      }\n\n      // Sort by request timestamp (newest first)\n      pendingDetails.sort((a, b) => b.requestTimestamp - a.requestTimestamp);\n      allDetails.sort((a, b) => b.requestTimestamp - a.requestTimestamp);\n      setPendingRequests(pendingDetails);\n      setAllRequests(allDetails);\n    } catch (error) {\n      console.error(\"Error loading business data:\", error);\n      toast.error(\"Failed to load business data\");\n    } finally {\n      setLoading(false);\n    }\n  };\n  const handleApprove = async receiptId => {\n    try {\n      setProcessingRequests(prev => new Set([...prev, receiptId]));\n      const tx = await contract.approveReceipt(receiptId);\n      toast.loading('Approving receipt...', {\n        id: `approve-${receiptId}`\n      });\n      await waitForTransaction(tx.hash);\n      toast.success('Receipt approved successfully!', {\n        id: `approve-${receiptId}`\n      });\n\n      // Reload data\n      await loadBusinessData();\n    } catch (error) {\n      console.error(\"Error approving receipt:\", error);\n      toast.error(`Failed to approve receipt: ${error.reason || error.message}`, {\n        id: `approve-${receiptId}`\n      });\n    } finally {\n      setProcessingRequests(prev => {\n        const newSet = new Set(prev);\n        newSet.delete(receiptId);\n        return newSet;\n      });\n    }\n  };\n  const openRejectModal = receiptId => {\n    setRejectReceiptId(receiptId);\n    setRejectionReason('');\n    setRejectionError('');\n    setIsRejectModalOpen(true);\n  };\n  const closeRejectModal = () => {\n    setIsRejectModalOpen(false);\n    setRejectReceiptId(null);\n    setRejectionReason('');\n    setRejectionError('');\n  };\n  const handleReject = async () => {\n    if (!rejectionReason.trim()) {\n      setRejectionError('Rejection reason cannot be empty');\n      return;\n    }\n    try {\n      setProcessingRequests(prev => new Set([...prev, rejectReceiptId]));\n      const tx = await contract.rejectReceipt(rejectReceiptId, rejectionReason.trim());\n      toast.loading('Rejecting receipt...', {\n        id: `reject-${rejectReceiptId}`\n      });\n      await waitForTransaction(tx.hash);\n      toast.success('Receipt rejected successfully!', {\n        id: `reject-${rejectReceiptId}`\n      });\n\n      // Reload data\n      await loadBusinessData();\n      closeRejectModal();\n    } catch (error) {\n      console.error(\"Error rejecting receipt:\", error);\n      toast.error(`Failed to reject receipt: ${error.reason || error.message}`, {\n        id: `reject-${rejectReceiptId}`\n      });\n    } finally {\n      setProcessingRequests(prev => {\n        const newSet = new Set(prev);\n        newSet.delete(rejectReceiptId);\n        return newSet;\n      });\n    }\n  };\n  const formatDate = date => {\n    return date.toLocaleDateString() + ' ' + date.toLocaleTimeString([], {\n      hour: '2-digit',\n      minute: '2-digit'\n    });\n  };\n  const getStatusIcon = status => {\n    switch (status) {\n      case 0:\n        return /*#__PURE__*/_jsxDEV(Clock, {\n          className: \"h-4 w-4 text-yellow-500\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 657,\n          columnNumber: 22\n        }, this);\n      case 1:\n        return /*#__PURE__*/_jsxDEV(CheckCircle, {\n          className: \"h-4 w-4 text-blue-500\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 658,\n          columnNumber: 22\n        }, this);\n      case 2:\n        return /*#__PURE__*/_jsxDEV(XCircle, {\n          className: \"h-4 w-4 text-red-500\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 659,\n          columnNumber: 22\n        }, this);\n      case 3:\n        return /*#__PURE__*/_jsxDEV(CheckCircle, {\n          className: \"h-4 w-4 text-green-500\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 660,\n          columnNumber: 22\n        }, this);\n      case 4:\n        return /*#__PURE__*/_jsxDEV(AlertCircle, {\n          className: \"h-4 w-4 text-orange-500\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 661,\n          columnNumber: 22\n        }, this);\n      case 5:\n        return /*#__PURE__*/_jsxDEV(XCircle, {\n          className: \"h-4 w-4 text-gray-500\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 662,\n          columnNumber: 22\n        }, this);\n      case 6:\n        return /*#__PURE__*/_jsxDEV(Clock, {\n          className: \"h-4 w-4 text-gray-500\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 663,\n          columnNumber: 22\n        }, this);\n      default:\n        return /*#__PURE__*/_jsxDEV(Clock, {\n          className: \"h-4 w-4 text-gray-500\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 664,\n          columnNumber: 23\n        }, this);\n    }\n  };\n  const getStatusColor = status => {\n    const colorMap = {\n      0: 'bg-yellow-100 text-yellow-800',\n      1: 'bg-blue-100 text-blue-800',\n      2: 'bg-red-100 text-red-800',\n      3: 'bg-green-100 text-green-800',\n      4: 'bg-orange-100 text-orange-800',\n      5: 'bg-gray-100 text-gray-800',\n      6: 'bg-gray-100 text-gray-800'\n    };\n    return colorMap[status] || 'bg-gray-100 text-gray-800';\n  };\n  const pendingCount = pendingRequests.length;\n  const approvedCount = allRequests.filter(r => r.status === 1 || r.status === 3).length;\n  const rejectedCount = allRequests.filter(r => r.status === 2).length;\n  const disputedCount = allRequests.filter(r => r.status === 4).length;\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(BusinessNavbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 688,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8 space-y-8\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex items-center justify-between\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            className: \"text-3xl font-bold text-gray-900 flex items-center space-x-3\",\n            children: [/*#__PURE__*/_jsxDEV(Building2, {\n              className: \"h-8 w-8 text-blue-600\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 694,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: \"Business Portal\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 695,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 693,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"mt-2 text-gray-600\",\n            children: \"Review and verify customer receipt requests\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 697,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mt-2 flex items-center space-x-2\",\n            children: [/*#__PURE__*/_jsxDEV(CheckCircle, {\n              className: \"h-4 w-4 text-green-500\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 701,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"text-sm text-gray-500\",\n              children: \"Verified Business - Pre-approved Status\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 702,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 700,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 692,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-right\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text-sm text-gray-500\",\n            children: \"Business Address\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 706,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"font-mono text-sm\",\n            children: formatAddress(BUSINESS_ADDRESS)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 707,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 705,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 691,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"grid grid-cols-1 md:grid-cols-4 gap-6\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex items-center\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"p-2 bg-yellow-100 rounded-lg\",\n              children: /*#__PURE__*/_jsxDEV(Clock, {\n                className: \"h-6 w-6 text-yellow-600\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 716,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 715,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"ml-4\",\n              children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"text-sm font-medium text-gray-600\",\n                children: \"Pending Requests\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 719,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"text-2xl font-bold text-gray-900\",\n                children: pendingCount\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 720,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 718,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 714,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 713,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex items-center\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"p-2 bg-green-100 rounded-lg\",\n              children: /*#__PURE__*/_jsxDEV(CheckCircle, {\n                className: \"h-6 w-6 text-green-600\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 728,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 727,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"ml-4\",\n              children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"text-sm font-medium text-gray-600\",\n                children: \"Approved\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 731,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"text-2xl font-bold text-gray-900\",\n                children: approvedCount\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 732,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 730,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 726,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 725,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex items-center\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"p-2 bg-red-100 rounded-lg\",\n              children: /*#__PURE__*/_jsxDEV(XCircle, {\n                className: \"h-6 w-6 text-red-600\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 740,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 739,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"ml-4\",\n              children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"text-sm font-medium text-gray-600\",\n                children: \"Rejected\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 743,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"text-2xl font-bold text-gray-900\",\n                children: rejectedCount\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 744,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 742,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 738,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 737,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex items-center\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"p-2 bg-blue-100 rounded-lg\",\n              children: /*#__PURE__*/_jsxDEV(Receipt, {\n                className: \"h-6 w-6 text-blue-600\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 752,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 751,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"ml-4\",\n              children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"text-sm font-medium text-gray-600\",\n                children: \"Total Requests\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 755,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"text-2xl font-bold text-gray-900\",\n                children: allRequests.length\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 756,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 754,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 750,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 749,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 712,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bg-white rounded-lg shadow\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"border-b border-gray-200\",\n          children: /*#__PURE__*/_jsxDEV(\"nav\", {\n            className: \"-mb-px flex space-x-8 px-6\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => setActiveTab('pending'),\n              className: `py-4 px-1 border-b-2 font-medium text-sm ${activeTab === 'pending' ? 'border-blue-500 text-blue-600' : 'border-transparent text-gray-500 hover:text-gray-700 hover:border-gray-300'}`,\n              children: [\"Pending Requests (\", pendingCount, \")\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 766,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => setActiveTab('all'),\n              className: `py-4 px-1 border-b-2 font-medium text-sm ${activeTab === 'all' ? 'border-blue-500 text-blue-600' : 'border-transparent text-gray-500 hover:text-gray-700 hover:border-gray-300'}`,\n              children: [\"All Requests (\", allRequests.length, \")\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 776,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 765,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 764,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"p-6\",\n          children: loading ? /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"text-center py-8\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"animate-spin rounded-full h-8 w-8 border-b-2 border-blue-600 mx-auto\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 793,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"mt-2 text-gray-600\",\n              children: \"Loading requests...\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 794,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 792,\n            columnNumber: 15\n          }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [activeTab === 'pending' && /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: pendingRequests.length === 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"text-center py-8\",\n                children: [/*#__PURE__*/_jsxDEV(Clock, {\n                  className: \"h-12 w-12 text-gray-400 mx-auto mb-4\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 802,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n                  className: \"text-lg font-medium text-gray-900 mb-2\",\n                  children: \"No pending requests\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 803,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"text-gray-600\",\n                  children: \"All receipt requests have been processed or expired.\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 804,\n                  columnNumber: 25\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 801,\n                columnNumber: 23\n              }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"space-y-4\",\n                children: pendingRequests.map(request => /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"border border-gray-200 rounded-lg p-6\",\n                  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"flex justify-between items-start\",\n                    children: /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"flex-1\",\n                      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                        className: \"flex items-center space-x-2 mb-2\",\n                        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                          className: \"text-lg font-medium text-gray-900\",\n                          children: [\"Receipt Request #\", request.id]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 813,\n                          columnNumber: 35\n                        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                          className: `inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium ${getStatusColor(request.status)}`,\n                          children: [getStatusIcon(request.status), /*#__PURE__*/_jsxDEV(\"span\", {\n                            className: \"ml-1\",\n                            children: RECEIPT_STATUS[request.status]\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 818,\n                            columnNumber: 37\n                          }, this)]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 816,\n                          columnNumber: 35\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 812,\n                        columnNumber: 33\n                      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                        className: \"grid grid-cols-1 md:grid-cols-2 gap-4 mb-4\",\n                        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                            className: \"text-sm text-gray-600\",\n                            children: \"Customer\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 824,\n                            columnNumber: 37\n                          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                            className: \"font-mono text-sm\",\n                            children: formatAddress(request.customer)\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 825,\n                            columnNumber: 37\n                          }, this)]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 823,\n                          columnNumber: 35\n                        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                            className: \"text-sm text-gray-600\",\n                            children: \"Amount\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 828,\n                            columnNumber: 37\n                          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                            className: \"text-lg font-semibold\",\n                            children: [formatEther(request.amount), \" ETH\"]\n                          }, void 0, true, {\n                            fileName: _jsxFileName,\n                            lineNumber: 829,\n                            columnNumber: 37\n                          }, this)]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 827,\n                          columnNumber: 35\n                        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                            className: \"text-sm text-gray-600\",\n                            children: \"Transaction Date\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 832,\n                            columnNumber: 37\n                          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                            children: formatDate(request.transactionDate)\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 833,\n                            columnNumber: 37\n                          }, this)]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 831,\n                          columnNumber: 35\n                        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                            className: \"text-sm text-gray-600\",\n                            children: \"Requested\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 836,\n                            columnNumber: 37\n                          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                            children: formatDate(request.requestTimestamp)\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 837,\n                            columnNumber: 37\n                          }, this)]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 835,\n                          columnNumber: 35\n                        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                            className: \"text-sm text-gray-600\",\n                            children: \"Deadline\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 840,\n                            columnNumber: 37\n                          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                            children: formatDate(request.deadline)\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 841,\n                            columnNumber: 37\n                          }, this)]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 839,\n                          columnNumber: 35\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 822,\n                        columnNumber: 33\n                      }, this), request.description && /*#__PURE__*/_jsxDEV(\"div\", {\n                        className: \"mb-4\",\n                        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                          className: \"text-sm text-gray-600\",\n                          children: \"Description\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 847,\n                          columnNumber: 37\n                        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                          className: \"text-gray-900\",\n                          children: request.description\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 848,\n                          columnNumber: 37\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 846,\n                        columnNumber: 35\n                      }, this), request.rejectionReason && /*#__PURE__*/_jsxDEV(\"div\", {\n                        className: \"mb-4\",\n                        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                          className: \"text-sm text-gray-600\",\n                          children: \"Rejection Reason\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 853,\n                          columnNumber: 37\n                        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                          className: \"text-gray-900\",\n                          children: request.rejectionReason\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 854,\n                          columnNumber: 37\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 852,\n                        columnNumber: 35\n                      }, this), request.disputeReason && /*#__PURE__*/_jsxDEV(\"div\", {\n                        className: \"mb-4\",\n                        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                          className: \"text-sm text-gray-600\",\n                          children: \"Dispute Reason\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 859,\n                          columnNumber: 37\n                        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                          className: \"text-gray-900\",\n                          children: request.disputeReason\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 860,\n                          columnNumber: 37\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 858,\n                        columnNumber: 35\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 811,\n                      columnNumber: 31\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 810,\n                    columnNumber: 29\n                  }, this), request.status !== 6 && /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"flex space-x-3 mt-4\",\n                    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                      onClick: () => handleApprove(request.id),\n                      disabled: processingRequests.has(request.id),\n                      className: \"btn-primary flex items-center space-x-2 disabled:opacity-50 disabled:cursor-not-allowed\",\n                      children: [/*#__PURE__*/_jsxDEV(CheckCircle, {\n                        className: \"h-4 w-4\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 873,\n                        columnNumber: 35\n                      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                        children: \"Approve\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 874,\n                        columnNumber: 35\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 868,\n                      columnNumber: 33\n                    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                      onClick: () => openRejectModal(request.id),\n                      disabled: processingRequests.has(request.id),\n                      className: \"btn-secondary flex items-center space-x-2 disabled:opacity-50 disabled:cursor-not-allowed\",\n                      children: [/*#__PURE__*/_jsxDEV(XCircle, {\n                        className: \"h-4 w-4\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 881,\n                        columnNumber: 35\n                      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                        children: \"Reject\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 882,\n                        columnNumber: 35\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 876,\n                      columnNumber: 33\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 867,\n                    columnNumber: 31\n                  }, this)]\n                }, request.id, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 809,\n                  columnNumber: 27\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 807,\n                columnNumber: 23\n              }, this)\n            }, void 0, false), activeTab === 'all' && /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: allRequests.length === 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"text-center py-8\",\n                children: [/*#__PURE__*/_jsxDEV(Receipt, {\n                  className: \"h-12 w-12 text-gray-400 mx-auto mb-4\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 897,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n                  className: \"text-lg font-medium text-gray-900 mb-2\",\n                  children: \"No requests yet\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 898,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"text-gray-600\",\n                  children: \"Customer receipt requests will appear here.\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 899,\n                  columnNumber: 25\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 896,\n                columnNumber: 23\n              }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"overflow-hidden\",\n                children: /*#__PURE__*/_jsxDEV(\"table\", {\n                  className: \"min-w-full divide-y divide-gray-200\",\n                  children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n                    className: \"bg-gray-50\",\n                    children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                      children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                        className: \"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\",\n                        children: \"Request ID\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 906,\n                        columnNumber: 31\n                      }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                        className: \"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\",\n                        children: \"Customer\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 909,\n                        columnNumber: 31\n                      }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                        className: \"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\",\n                        children: \"Amount\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 912,\n                        columnNumber: 31\n                      }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                        className: \"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\",\n                        children: \"Status\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 915,\n                        columnNumber: 31\n                      }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                        className: \"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\",\n                        children: \"Requested\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 918,\n                        columnNumber: 31\n                      }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                        className: \"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\",\n                        children: \"Deadline\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 921,\n                        columnNumber: 31\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 905,\n                      columnNumber: 29\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 904,\n                    columnNumber: 27\n                  }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n                    className: \"bg-white divide-y divide-gray-200\",\n                    children: allRequests.map(request => /*#__PURE__*/_jsxDEV(\"tr\", {\n                      className: \"hover:bg-gray-50\",\n                      children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                        className: \"px-6 py-4 whitespace-nowrap\",\n                        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                          className: \"text-sm font-medium text-gray-900\",\n                          children: [\"#\", request.id]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 930,\n                          columnNumber: 35\n                        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                          className: \"text-sm text-gray-500\",\n                          children: request.description || 'No description'\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 933,\n                          columnNumber: 35\n                        }, this), request.rejectionReason && /*#__PURE__*/_jsxDEV(\"div\", {\n                          className: \"text-sm text-red-600\",\n                          children: [\"Rejection: \", request.rejectionReason]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 937,\n                          columnNumber: 37\n                        }, this), request.disputeReason && /*#__PURE__*/_jsxDEV(\"div\", {\n                          className: \"text-sm text-orange-600\",\n                          children: [\"Dispute: \", request.disputeReason]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 942,\n                          columnNumber: 37\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 929,\n                        columnNumber: 33\n                      }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                        className: \"px-6 py-4 whitespace-nowrap\",\n                        children: /*#__PURE__*/_jsxDEV(\"div\", {\n                          className: \"text-sm font-mono text-gray-900\",\n                          children: formatAddress(request.customer)\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 948,\n                          columnNumber: 35\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 947,\n                        columnNumber: 33\n                      }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                        className: \"px-6 py-4 whitespace-nowrap\",\n                        children: /*#__PURE__*/_jsxDEV(\"div\", {\n                          className: \"text-sm font-medium text-gray-900\",\n                          children: [formatEther(request.amount), \" ETH\"]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 953,\n                          columnNumber: 35\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 952,\n                        columnNumber: 33\n                      }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                        className: \"px-6 py-4 whitespace-nowrap\",\n                        children: /*#__PURE__*/_jsxDEV(\"span\", {\n                          className: `inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium ${getStatusColor(request.status)}`,\n                          children: [getStatusIcon(request.status), /*#__PURE__*/_jsxDEV(\"span\", {\n                            className: \"ml-1\",\n                            children: RECEIPT_STATUS[request.status]\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 960,\n                            columnNumber: 37\n                          }, this)]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 958,\n                          columnNumber: 35\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 957,\n                        columnNumber: 33\n                      }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                        className: \"px-6 py-4 whitespace-nowrap text-sm text-gray-500\",\n                        children: formatDate(request.requestTimestamp)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 963,\n                        columnNumber: 33\n                      }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                        className: \"px-6 py-4 whitespace-nowrap text-sm text-gray-500\",\n                        children: formatDate(request.deadline)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 966,\n                        columnNumber: 33\n                      }, this)]\n                    }, request.id, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 928,\n                      columnNumber: 31\n                    }, this))\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 926,\n                    columnNumber: 27\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 903,\n                  columnNumber: 25\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 902,\n                columnNumber: 23\n              }, this)\n            }, void 0, false)]\n          }, void 0, true)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 790,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 763,\n        columnNumber: 9\n      }, this), isRejectModalOpen && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"fixed inset-0 bg-gray-600 bg-opacity-50 flex items-center justify-center z-50\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"bg-white rounded-lg shadow-lg p-6 w-full max-w-md\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            className: \"text-lg font-medium text-gray-900 mb-4\",\n            children: [\"Reject Receipt #\", rejectReceiptId]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 986,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mb-4\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"rejectionReason\",\n              className: \"block text-sm font-medium text-gray-700\",\n              children: \"Reason for Rejection\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 988,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n              id: \"rejectionReason\",\n              className: \"mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-blue-500 focus:ring-blue-500 sm:text-sm\",\n              rows: \"4\",\n              value: rejectionReason,\n              onChange: e => {\n                setRejectionReason(e.target.value);\n                setRejectionError('');\n              },\n              placeholder: \"Enter the reason for rejecting this receipt\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 991,\n              columnNumber: 17\n            }, this), rejectionError && /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"mt-2 text-sm text-red-600\",\n              children: rejectionError\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1003,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 987,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex justify-end space-x-3\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: closeRejectModal,\n              className: \"btn-secondary px-4 py-2 text-sm font-medium\",\n              children: \"Cancel\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1007,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: handleReject,\n              disabled: processingRequests.has(rejectReceiptId),\n              className: \"btn-primary px-4 py-2 text-sm font-medium disabled:opacity-50 disabled:cursor-not-allowed\",\n              children: \"Confirm Reject\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1013,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1006,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 985,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 984,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 689,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_s(BusinessPortal, \"LuMSmHwJVqS1sScaHnXJ3/CzjMg=\", false, function () {\n  return [useWeb3];\n});\n_c = BusinessPortal;\nexport default BusinessPortal;\nvar _c;\n$RefreshReg$(_c, \"BusinessPortal\");","map":{"version":3,"names":["React","useState","useEffect","useWeb3","RECEIPT_STATUS","BusinessNavbar","Building2","CheckCircle","XCircle","Clock","Eye","AlertCircle","TrendingUp","Receipt","toast","jsxDEV","_jsxDEV","Fragment","_Fragment","BusinessPortal","_s","contract","formatEther","formatAddress","waitForTransaction","pendingRequests","setPendingRequests","allRequests","setAllRequests","loading","setLoading","activeTab","setActiveTab","processingRequests","setProcessingRequests","Set","isRejectModalOpen","setIsRejectModalOpen","rejectReceiptId","setRejectReceiptId","rejectionReason","setRejectionReason","rejectionError","setRejectionError","BUSINESS_ADDRESS","loadBusinessData","pendingIds","getPendingRequests","allReceiptIds","getBusinessReceipts","blockTimestamp","Math","floor","Date","now","pendingDetails","id","receipt","getReceipt","Number","exists","isExpired","status","deadline","toNumber","push","vendorName","description","amount","transactionDate","requestTimestamp","customer","recipient","disputeReason","error","console","allDetails","sort","a","b","handleApprove","receiptId","prev","tx","approveReceipt","hash","success","reason","message","newSet","delete","openRejectModal","closeRejectModal","handleReject","trim","rejectReceipt","formatDate","date","toLocaleDateString","toLocaleTimeString","hour","minute","getStatusIcon","className","fileName","_jsxFileName","lineNumber","columnNumber","getStatusColor","colorMap","pendingCount","length","approvedCount","filter","r","rejectedCount","disputedCount","children","onClick","map","request","disabled","has","htmlFor","rows","value","onChange","e","target","placeholder","_c","$RefreshReg$"],"sources":["/home/leo1305286/collab-web3/reverif/frontend/src/pages/BusinessPortal.jsx"],"sourcesContent":["// import React, { useState, useEffect } from 'react';\n// import { useWeb3 } from '../contexts/Web3Context';\n// import { RECEIPT_STATUS } from '../config/contract';\n// import BusinessNavbar from '../components/Layout/BusinessNavbar';\n// import { \n//   Building2, \n//   CheckCircle, \n//   XCircle, \n//   Clock,\n//   Eye,\n//   AlertCircle,\n//   TrendingUp,\n//   Receipt\n// } from 'lucide-react';\n// import toast from 'react-hot-toast';\n\n// const BusinessPortal = () => {\n//   const { \n//     contract, \n//     formatEther, \n//     formatAddress,\n//     waitForTransaction\n//   } = useWeb3();\n  \n//   const [pendingRequests, setPendingRequests] = useState([]);\n//   const [allRequests, setAllRequests] = useState([]);\n//   const [loading, setLoading] = useState(true);\n//   const [activeTab, setActiveTab] = useState('pending');\n//   const [processingRequests, setProcessingRequests] = useState(new Set());\n\n//   // For testing purposes, we'll use a hardcoded business address\n//   // In a real scenario, this would be dynamically determined\n//   const BUSINESS_ADDRESS = \"0x70997970C51812dc3A010C7d01b50e0d17dc79C8\"; // Account #1 from Hardhat\n\n//   useEffect(() => {\n//     if (contract) {\n//       loadBusinessData();\n//     }\n//   }, [contract]);\n\n//   const loadBusinessData = async () => {\n//     try {\n//       setLoading(true);\n      \n//       // Get pending requests for this business\n//       const pendingIds = await contract.getPendingRequests(BUSINESS_ADDRESS);\n      \n//       // Get all business receipts\n//       const allReceiptIds = await contract.getBusinessReceipts(BUSINESS_ADDRESS);\n      \n//       // Load pending request details\n//       const pendingDetails = [];\n//       for (let id of pendingIds) {\n//         try {\n//           const receipt = await contract.getReceipt(Number(id));\n//           if (receipt.exists) {\n//             pendingDetails.push({\n//               id: Number(receipt.id),\n//               vendorName: receipt.vendorName,\n//               description: receipt.description,\n//               amount: receipt.amount,\n//               status: Number(receipt.status),\n//               transactionDate: new Date(Number(receipt.transactionDate) * 1000),\n//               requestTimestamp: new Date(Number(receipt.requestTimestamp) * 1000),\n//               customer: receipt.recipient\n//             });\n//           }\n//         } catch (error) {\n//           console.error(`Error loading pending request ${id}:`, error);\n//         }\n//       }\n\n//       // Load all request details\n//       const allDetails = [];\n//       for (let id of allReceiptIds) {\n//         try {\n//           const receipt = await contract.getReceipt(Number(id));\n//           if (receipt.exists) {\n//             allDetails.push({\n//               id: Number(receipt.id),\n//               vendorName: receipt.vendorName,\n//               description: receipt.description,\n//               amount: receipt.amount,\n//               status: Number(receipt.status),\n//               transactionDate: new Date(Number(receipt.transactionDate) * 1000),\n//               requestTimestamp: new Date(Number(receipt.requestTimestamp) * 1000),\n//               customer: receipt.recipient\n//             });\n//           }\n//         } catch (error) {\n//           console.error(`Error loading request ${id}:`, error);\n//         }\n//       }\n\n//       // Sort by request timestamp (newest first)\n//       pendingDetails.sort((a, b) => b.requestTimestamp - a.requestTimestamp);\n//       allDetails.sort((a, b) => b.requestTimestamp - a.requestTimestamp);\n\n//       setPendingRequests(pendingDetails);\n//       setAllRequests(allDetails);\n//     } catch (error) {\n//       console.error(\"Error loading business data:\", error);\n//       toast.error(\"Failed to load business data\");\n//     } finally {\n//       setLoading(false);\n//     }\n//   };\n\n//   const handleApprove = async (receiptId) => {\n//     try {\n//       setProcessingRequests(prev => new Set([...prev, receiptId]));\n      \n//       const tx = await contract.approveReceipt(receiptId);\n//       toast.loading('Approving receipt...', { id: `approve-${receiptId}` });\n      \n//       await waitForTransaction(tx.hash);\n      \n//       toast.success('Receipt approved successfully!', { id: `approve-${receiptId}` });\n      \n//       // Reload data\n//       await loadBusinessData();\n//     } catch (error) {\n//       console.error(\"Error approving receipt:\", error);\n//       toast.error(`Failed to approve receipt: ${error.reason || error.message}`, { id: `approve-${receiptId}` });\n//     } finally {\n//       setProcessingRequests(prev => {\n//         const newSet = new Set(prev);\n//         newSet.delete(receiptId);\n//         return newSet;\n//       });\n//     }\n//   };\n\n//   const handleReject = async (receiptId, reason = \"Request rejected by business\") => {\n//     try {\n//       setProcessingRequests(prev => new Set([...prev, receiptId]));\n      \n//       const tx = await contract.rejectReceipt(receiptId, reason);\n//       toast.loading('Rejecting receipt...', { id: `reject-${receiptId}` });\n      \n//       await waitForTransaction(tx.hash);\n      \n//       toast.success('Receipt rejected successfully!', { id: `reject-${receiptId}` });\n      \n//       // Reload data\n//       await loadBusinessData();\n//     } catch (error) {\n//       console.error(\"Error rejecting receipt:\", error);\n//       toast.error(`Failed to reject receipt: ${error.reason || error.message}`, { id: `reject-${receiptId}` });\n//     } finally {\n//       setProcessingRequests(prev => {\n//         const newSet = new Set(prev);\n//         newSet.delete(receiptId);\n//         return newSet;\n//       });\n//     }\n//   };\n\n//   const formatDate = (date) => {\n//     return date.toLocaleDateString() + ' ' + date.toLocaleTimeString([], { hour: '2-digit', minute: '2-digit' });\n//   };\n\n//   const getStatusIcon = (status) => {\n//     switch (status) {\n//       case 0: return <Clock className=\"h-4 w-4 text-yellow-500\" />;\n//       case 1: return <CheckCircle className=\"h-4 w-4 text-blue-500\" />;\n//       case 2: return <XCircle className=\"h-4 w-4 text-red-500\" />;\n//       case 3: return <CheckCircle className=\"h-4 w-4 text-green-500\" />;\n//       default: return <Clock className=\"h-4 w-4 text-gray-500\" />;\n//     }\n//   };\n\n//   const getStatusColor = (status) => {\n//     const colorMap = {\n//       0: 'bg-yellow-100 text-yellow-800',\n//       1: 'bg-blue-100 text-blue-800',\n//       2: 'bg-red-100 text-red-800',\n//       3: 'bg-green-100 text-green-800'\n//     };\n//     return colorMap[status] || 'bg-gray-100 text-gray-800';\n//   };\n\n//   const pendingCount = pendingRequests.length;\n//   const approvedCount = allRequests.filter(r => r.status === 1 || r.status === 3).length;\n//   const rejectedCount = allRequests.filter(r => r.status === 2).length;\n\n//   return (\n//     <>\n//       <BusinessNavbar />\n//       <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8 space-y-8\">\n//       {/* Header */}\n//       <div className=\"flex items-center justify-between\">\n//         <div>\n//           <h1 className=\"text-3xl font-bold text-gray-900 flex items-center space-x-3\">\n//             <Building2 className=\"h-8 w-8 text-blue-600\" />\n//             <span>Business Portal</span>\n//           </h1>\n//           <p className=\"mt-2 text-gray-600\">\n//             Review and verify customer receipt requests\n//           </p>\n//           <div className=\"mt-2 flex items-center space-x-2\">\n//             <CheckCircle className=\"h-4 w-4 text-green-500\" />\n//             <span className=\"text-sm text-gray-500\">Verified Business - Pre-approved Status</span>\n//           </div>\n//         </div>\n//         <div className=\"text-right\">\n//           <p className=\"text-sm text-gray-500\">Business Address</p>\n//           <p className=\"font-mono text-sm\">{formatAddress(BUSINESS_ADDRESS)}</p>\n//         </div>\n//       </div>\n\n//       {/* Stats Cards */}\n//       <div className=\"grid grid-cols-1 md:grid-cols-4 gap-6\">\n//         <div className=\"card\">\n//           <div className=\"flex items-center\">\n//             <div className=\"p-2 bg-yellow-100 rounded-lg\">\n//               <Clock className=\"h-6 w-6 text-yellow-600\" />\n//             </div>\n//             <div className=\"ml-4\">\n//               <p className=\"text-sm font-medium text-gray-600\">Pending Requests</p>\n//               <p className=\"text-2xl font-bold text-gray-900\">{pendingCount}</p>\n//             </div>\n//           </div>\n//         </div>\n\n//         <div className=\"card\">\n//           <div className=\"flex items-center\">\n//             <div className=\"p-2 bg-green-100 rounded-lg\">\n//               <CheckCircle className=\"h-6 w-6 text-green-600\" />\n//             </div>\n//             <div className=\"ml-4\">\n//               <p className=\"text-sm font-medium text-gray-600\">Approved</p>\n//               <p className=\"text-2xl font-bold text-gray-900\">{approvedCount}</p>\n//             </div>\n//           </div>\n//         </div>\n\n//         <div className=\"card\">\n//           <div className=\"flex items-center\">\n//             <div className=\"p-2 bg-red-100 rounded-lg\">\n//               <XCircle className=\"h-6 w-6 text-red-600\" />\n//             </div>\n//             <div className=\"ml-4\">\n//               <p className=\"text-sm font-medium text-gray-600\">Rejected</p>\n//               <p className=\"text-2xl font-bold text-gray-900\">{rejectedCount}</p>\n//             </div>\n//           </div>\n//         </div>\n\n//         <div className=\"card\">\n//           <div className=\"flex items-center\">\n//             <div className=\"p-2 bg-blue-100 rounded-lg\">\n//               <Receipt className=\"h-6 w-6 text-blue-600\" />\n//             </div>\n//             <div className=\"ml-4\">\n//               <p className=\"text-sm font-medium text-gray-600\">Total Requests</p>\n//               <p className=\"text-2xl font-bold text-gray-900\">{allRequests.length}</p>\n//             </div>\n//           </div>\n//         </div>\n//       </div>\n\n//       {/* Tabs */}\n//       <div className=\"bg-white rounded-lg shadow\">\n//         <div className=\"border-b border-gray-200\">\n//           <nav className=\"-mb-px flex space-x-8 px-6\">\n//             <button\n//               onClick={() => setActiveTab('pending')}\n//               className={`py-4 px-1 border-b-2 font-medium text-sm ${\n//                 activeTab === 'pending'\n//                   ? 'border-blue-500 text-blue-600'\n//                   : 'border-transparent text-gray-500 hover:text-gray-700 hover:border-gray-300'\n//               }`}\n//             >\n//               Pending Requests ({pendingCount})\n//             </button>\n//             <button\n//               onClick={() => setActiveTab('all')}\n//               className={`py-4 px-1 border-b-2 font-medium text-sm ${\n//                 activeTab === 'all'\n//                   ? 'border-blue-500 text-blue-600'\n//                   : 'border-transparent text-gray-500 hover:text-gray-700 hover:border-gray-300'\n//               }`}\n//             >\n//               All Requests ({allRequests.length})\n//             </button>\n//           </nav>\n//         </div>\n\n//         {/* Content */}\n//         <div className=\"p-6\">\n//           {loading ? (\n//             <div className=\"text-center py-8\">\n//               <div className=\"animate-spin rounded-full h-8 w-8 border-b-2 border-blue-600 mx-auto\"></div>\n//               <p className=\"mt-2 text-gray-600\">Loading requests...</p>\n//             </div>\n//           ) : (\n//             <>\n//               {activeTab === 'pending' && (\n//                 <>\n//                   {pendingRequests.length === 0 ? (\n//                     <div className=\"text-center py-8\">\n//                       <Clock className=\"h-12 w-12 text-gray-400 mx-auto mb-4\" />\n//                       <h3 className=\"text-lg font-medium text-gray-900 mb-2\">No pending requests</h3>\n//                       <p className=\"text-gray-600\">All receipt requests have been processed.</p>\n//                     </div>\n//                   ) : (\n//                     <div className=\"space-y-4\">\n//                       {pendingRequests.map((request) => (\n//                         <div key={request.id} className=\"border border-gray-200 rounded-lg p-6\">\n//                           <div className=\"flex justify-between items-start\">\n//                             <div className=\"flex-1\">\n//                               <div className=\"flex items-center space-x-2 mb-2\">\n//                                 <h3 className=\"text-lg font-medium text-gray-900\">\n//                                   Receipt Request #{request.id}\n//                                 </h3>\n//                                 <span className={`inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium ${getStatusColor(request.status)}`}>\n//                                   {getStatusIcon(request.status)}\n//                                   <span className=\"ml-1\">{RECEIPT_STATUS[request.status]}</span>\n//                                 </span>\n//                               </div>\n                              \n//                               <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4 mb-4\">\n//                                 <div>\n//                                   <p className=\"text-sm text-gray-600\">Customer</p>\n//                                   <p className=\"font-mono text-sm\">{formatAddress(request.customer)}</p>\n//                                 </div>\n//                                 <div>\n//                                   <p className=\"text-sm text-gray-600\">Amount</p>\n//                                   <p className=\"text-lg font-semibold\">{formatEther(request.amount)} ETH</p>\n//                                 </div>\n//                                 <div>\n//                                   <p className=\"text-sm text-gray-600\">Transaction Date</p>\n//                                   <p>{formatDate(request.transactionDate)}</p>\n//                                 </div>\n//                                 <div>\n//                                   <p className=\"text-sm text-gray-600\">Requested</p>\n//                                   <p>{formatDate(request.requestTimestamp)}</p>\n//                                 </div>\n//                               </div>\n                              \n//                               {request.description && (\n//                                 <div className=\"mb-4\">\n//                                   <p className=\"text-sm text-gray-600\">Description</p>\n//                                   <p className=\"text-gray-900\">{request.description}</p>\n//                                 </div>\n//                               )}\n//                             </div>\n//                           </div>\n                          \n//                           <div className=\"flex space-x-3 mt-4\">\n//                             <button\n//                               onClick={() => handleApprove(request.id)}\n//                               disabled={processingRequests.has(request.id)}\n//                               className=\"btn-primary flex items-center space-x-2 disabled:opacity-50 disabled:cursor-not-allowed\"\n//                             >\n//                               <CheckCircle className=\"h-4 w-4\" />\n//                               <span>Approve</span>\n//                             </button>\n//                             <button\n//                               onClick={() => handleReject(request.id)}\n//                               disabled={processingRequests.has(request.id)}\n//                               className=\"btn-secondary flex items-center space-x-2 disabled:opacity-50 disabled:cursor-not-allowed\"\n//                             >\n//                               <XCircle className=\"h-4 w-4\" />\n//                               <span>Reject</span>\n//                             </button>\n//                           </div>\n//                         </div>\n//                       ))}\n//                     </div>\n//                   )}\n//                 </>\n//               )}\n\n//               {activeTab === 'all' && (\n//                 <>\n//                   {allRequests.length === 0 ? (\n//                     <div className=\"text-center py-8\">\n//                       <Receipt className=\"h-12 w-12 text-gray-400 mx-auto mb-4\" />\n//                       <h3 className=\"text-lg font-medium text-gray-900 mb-2\">No requests yet</h3>\n//                       <p className=\"text-gray-600\">Customer receipt requests will appear here.</p>\n//                     </div>\n//                   ) : (\n//                     <div className=\"overflow-hidden\">\n//                       <table className=\"min-w-full divide-y divide-gray-200\">\n//                         <thead className=\"bg-gray-50\">\n//                           <tr>\n//                             <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n//                               Request ID\n//                             </th>\n//                             <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n//                               Customer\n//                             </th>\n//                             <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n//                               Amount\n//                             </th>\n//                             <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n//                               Status\n//                             </th>\n//                             <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n//                               Requested\n//                             </th>\n//                           </tr>\n//                         </thead>\n//                         <tbody className=\"bg-white divide-y divide-gray-200\">\n//                           {allRequests.map((request) => (\n//                             <tr key={request.id} className=\"hover:bg-gray-50\">\n//                               <td className=\"px-6 py-4 whitespace-nowrap\">\n//                                 <div className=\"text-sm font-medium text-gray-900\">\n//                                   #{request.id}\n//                                 </div>\n//                                 <div className=\"text-sm text-gray-500\">\n//                                   {request.description || 'No description'}\n//                                 </div>\n//                               </td>\n//                               <td className=\"px-6 py-4 whitespace-nowrap\">\n//                                 <div className=\"text-sm font-mono text-gray-900\">\n//                                   {formatAddress(request.customer)}\n//                                 </div>\n//                               </td>\n//                               <td className=\"px-6 py-4 whitespace-nowrap\">\n//                                 <div className=\"text-sm font-medium text-gray-900\">\n//                                   {formatEther(request.amount)} ETH\n//                                 </div>\n//                               </td>\n//                               <td className=\"px-6 py-4 whitespace-nowrap\">\n//                                 <span className={`inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium ${getStatusColor(request.status)}`}>\n//                                   {getStatusIcon(request.status)}\n//                                   <span className=\"ml-1\">{RECEIPT_STATUS[request.status]}</span>\n//                                 </span>\n//                               </td>\n//                               <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500\">\n//                                 {formatDate(request.requestTimestamp)}\n//                               </td>\n//                             </tr>\n//                           ))}\n//                         </tbody>\n//                       </table>\n//                     </div>\n//                   )}\n//                 </>\n//               )}\n//             </>\n//           )}\n//         </div>\n//       </div>\n//       </div>\n//     </>\n//   );\n// };\n\n// export default BusinessPortal;\n\nimport React, { useState, useEffect } from 'react';\nimport { useWeb3 } from '../contexts/Web3Context';\nimport { RECEIPT_STATUS } from '../config/contract';\nimport BusinessNavbar from '../components/Layout/BusinessNavbar';\nimport { \n  Building2, \n  CheckCircle, \n  XCircle, \n  Clock,\n  Eye,\n  AlertCircle,\n  TrendingUp,\n  Receipt\n} from 'lucide-react';\nimport toast from 'react-hot-toast';\n\nconst BusinessPortal = () => {\n  const { \n    contract, \n    formatEther, \n    formatAddress,\n    waitForTransaction\n  } = useWeb3();\n  \n  const [pendingRequests, setPendingRequests] = useState([]);\n  const [allRequests, setAllRequests] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [activeTab, setActiveTab] = useState('pending');\n  const [processingRequests, setProcessingRequests] = useState(new Set());\n  // State for rejection modal\n  const [isRejectModalOpen, setIsRejectModalOpen] = useState(false);\n  const [rejectReceiptId, setRejectReceiptId] = useState(null);\n  const [rejectionReason, setRejectionReason] = useState('');\n  const [rejectionError, setRejectionError] = useState('');\n\n  // For testing purposes, we'll use a hardcoded business address\n  // In a real scenario, this would be dynamically determined\n  const BUSINESS_ADDRESS = \"0x70997970C51812dc3A010C7d01b50e0d17dc79C8\"; // Account #1 from Hardhat\n\n  useEffect(() => {\n    if (contract) {\n      loadBusinessData();\n    }\n  }, [contract]);\n\n  const loadBusinessData = async () => {\n    try {\n      setLoading(true);\n      \n      // Get pending requests for this business\n      const pendingIds = await contract.getPendingRequests(BUSINESS_ADDRESS);\n      \n      // Get all business receipts\n      const allReceiptIds = await contract.getBusinessReceipts(BUSINESS_ADDRESS);\n      \n      // Get current block timestamp for deadline checks\n      const blockTimestamp = Math.floor(Date.now() / 1000); // Current time in seconds\n\n      // Load pending request details\n      const pendingDetails = [];\n      for (let id of pendingIds) {\n        try {\n          const receipt = await contract.getReceipt(Number(id));\n          if (receipt.exists) {\n            // Check if receipt is expired (Requested and past deadline)\n            const isExpired = receipt.status === 0 && blockTimestamp > receipt.deadline.toNumber();\n            pendingDetails.push({\n              id: Number(receipt.id),\n              vendorName: receipt.vendorName,\n              description: receipt.description,\n              amount: receipt.amount,\n              status: isExpired ? 6 : Number(receipt.status), // Use Expired (6) if past deadline\n              transactionDate: new Date(Number(receipt.transactionDate) * 1000),\n              requestTimestamp: new Date(Number(receipt.requestTimestamp) * 1000),\n              deadline: new Date(Number(receipt.deadline) * 1000),\n              customer: receipt.recipient,\n              rejectionReason: receipt.rejectionReason || '',\n              disputeReason: receipt.disputeReason || ''\n            });\n          }\n        } catch (error) {\n          console.error(`Error loading pending request ${id}:`, error);\n        }\n      }\n\n      // Load all request details\n      const allDetails = [];\n      for (let id of allReceiptIds) {\n        try {\n          const receipt = await contract.getReceipt(Number(id));\n          if (receipt.exists) {\n            // Check if receipt is expired (Requested and past deadline)\n            const isExpired = receipt.status === 0 && blockTimestamp > receipt.deadline.toNumber();\n            allDetails.push({\n              id: Number(receipt.id),\n              vendorName: receipt.vendorName,\n              description: receipt.description,\n              amount: receipt.amount,\n              status: isExpired ? 6 : Number(receipt.status), // Use Expired (6) if past deadline\n              transactionDate: new Date(Number(receipt.transactionDate) * 1000),\n              requestTimestamp: new Date(Number(receipt.requestTimestamp) * 1000),\n              deadline: new Date(Number(receipt.deadline) * 1000),\n              customer: receipt.recipient,\n              rejectionReason: receipt.rejectionReason || '',\n              disputeReason: receipt.disputeReason || ''\n            });\n          }\n        } catch (error) {\n          console.error(`Error loading request ${id}:`, error);\n        }\n      }\n\n      // Sort by request timestamp (newest first)\n      pendingDetails.sort((a, b) => b.requestTimestamp - a.requestTimestamp);\n      allDetails.sort((a, b) => b.requestTimestamp - a.requestTimestamp);\n\n      setPendingRequests(pendingDetails);\n      setAllRequests(allDetails);\n    } catch (error) {\n      console.error(\"Error loading business data:\", error);\n      toast.error(\"Failed to load business data\");\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const handleApprove = async (receiptId) => {\n    try {\n      setProcessingRequests(prev => new Set([...prev, receiptId]));\n      \n      const tx = await contract.approveReceipt(receiptId);\n      toast.loading('Approving receipt...', { id: `approve-${receiptId}` });\n      \n      await waitForTransaction(tx.hash);\n      \n      toast.success('Receipt approved successfully!', { id: `approve-${receiptId}` });\n      \n      // Reload data\n      await loadBusinessData();\n    } catch (error) {\n      console.error(\"Error approving receipt:\", error);\n      toast.error(`Failed to approve receipt: ${error.reason || error.message}`, { id: `approve-${receiptId}` });\n    } finally {\n      setProcessingRequests(prev => {\n        const newSet = new Set(prev);\n        newSet.delete(receiptId);\n        return newSet;\n      });\n    }\n  };\n\n  const openRejectModal = (receiptId) => {\n    setRejectReceiptId(receiptId);\n    setRejectionReason('');\n    setRejectionError('');\n    setIsRejectModalOpen(true);\n  };\n\n  const closeRejectModal = () => {\n    setIsRejectModalOpen(false);\n    setRejectReceiptId(null);\n    setRejectionReason('');\n    setRejectionError('');\n  };\n\n  const handleReject = async () => {\n    if (!rejectionReason.trim()) {\n      setRejectionError('Rejection reason cannot be empty');\n      return;\n    }\n\n    try {\n      setProcessingRequests(prev => new Set([...prev, rejectReceiptId]));\n      \n      const tx = await contract.rejectReceipt(rejectReceiptId, rejectionReason.trim());\n      toast.loading('Rejecting receipt...', { id: `reject-${rejectReceiptId}` });\n      \n      await waitForTransaction(tx.hash);\n      \n      toast.success('Receipt rejected successfully!', { id: `reject-${rejectReceiptId}` });\n      \n      // Reload data\n      await loadBusinessData();\n      closeRejectModal();\n    } catch (error) {\n      console.error(\"Error rejecting receipt:\", error);\n      toast.error(`Failed to reject receipt: ${error.reason || error.message}`, { id: `reject-${rejectReceiptId}` });\n    } finally {\n      setProcessingRequests(prev => {\n        const newSet = new Set(prev);\n        newSet.delete(rejectReceiptId);\n        return newSet;\n      });\n    }\n  };\n\n  const formatDate = (date) => {\n    return date.toLocaleDateString() + ' ' + date.toLocaleTimeString([], { hour: '2-digit', minute: '2-digit' });\n  };\n\n  const getStatusIcon = (status) => {\n    switch (status) {\n      case 0: return <Clock className=\"h-4 w-4 text-yellow-500\" />;\n      case 1: return <CheckCircle className=\"h-4 w-4 text-blue-500\" />;\n      case 2: return <XCircle className=\"h-4 w-4 text-red-500\" />;\n      case 3: return <CheckCircle className=\"h-4 w-4 text-green-500\" />;\n      case 4: return <AlertCircle className=\"h-4 w-4 text-orange-500\" />;\n      case 5: return <XCircle className=\"h-4 w-4 text-gray-500\" />;\n      case 6: return <Clock className=\"h-4 w-4 text-gray-500\" />;\n      default: return <Clock className=\"h-4 w-4 text-gray-500\" />;\n    }\n  };\n\n  const getStatusColor = (status) => {\n    const colorMap = {\n      0: 'bg-yellow-100 text-yellow-800',\n      1: 'bg-blue-100 text-blue-800',\n      2: 'bg-red-100 text-red-800',\n      3: 'bg-green-100 text-green-800',\n      4: 'bg-orange-100 text-orange-800',\n      5: 'bg-gray-100 text-gray-800',\n      6: 'bg-gray-100 text-gray-800'\n    };\n    return colorMap[status] || 'bg-gray-100 text-gray-800';\n  };\n\n  const pendingCount = pendingRequests.length;\n  const approvedCount = allRequests.filter(r => r.status === 1 || r.status === 3).length;\n  const rejectedCount = allRequests.filter(r => r.status === 2).length;\n  const disputedCount = allRequests.filter(r => r.status === 4).length;\n\n  return (\n    <>\n      <BusinessNavbar />\n      <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8 space-y-8\">\n        {/* Header */}\n        <div className=\"flex items-center justify-between\">\n          <div>\n            <h1 className=\"text-3xl font-bold text-gray-900 flex items-center space-x-3\">\n              <Building2 className=\"h-8 w-8 text-blue-600\" />\n              <span>Business Portal</span>\n            </h1>\n            <p className=\"mt-2 text-gray-600\">\n              Review and verify customer receipt requests\n            </p>\n            <div className=\"mt-2 flex items-center space-x-2\">\n              <CheckCircle className=\"h-4 w-4 text-green-500\" />\n              <span className=\"text-sm text-gray-500\">Verified Business - Pre-approved Status</span>\n            </div>\n          </div>\n          <div className=\"text-right\">\n            <p className=\"text-sm text-gray-500\">Business Address</p>\n            <p className=\"font-mono text-sm\">{formatAddress(BUSINESS_ADDRESS)}</p>\n          </div>\n        </div>\n\n        {/* Stats Cards */}\n        <div className=\"grid grid-cols-1 md:grid-cols-4 gap-6\">\n          <div className=\"card\">\n            <div className=\"flex items-center\">\n              <div className=\"p-2 bg-yellow-100 rounded-lg\">\n                <Clock className=\"h-6 w-6 text-yellow-600\" />\n              </div>\n              <div className=\"ml-4\">\n                <p className=\"text-sm font-medium text-gray-600\">Pending Requests</p>\n                <p className=\"text-2xl font-bold text-gray-900\">{pendingCount}</p>\n              </div>\n            </div>\n          </div>\n\n          <div className=\"card\">\n            <div className=\"flex items-center\">\n              <div className=\"p-2 bg-green-100 rounded-lg\">\n                <CheckCircle className=\"h-6 w-6 text-green-600\" />\n              </div>\n              <div className=\"ml-4\">\n                <p className=\"text-sm font-medium text-gray-600\">Approved</p>\n                <p className=\"text-2xl font-bold text-gray-900\">{approvedCount}</p>\n              </div>\n            </div>\n          </div>\n\n          <div className=\"card\">\n            <div className=\"flex items-center\">\n              <div className=\"p-2 bg-red-100 rounded-lg\">\n                <XCircle className=\"h-6 w-6 text-red-600\" />\n              </div>\n              <div className=\"ml-4\">\n                <p className=\"text-sm font-medium text-gray-600\">Rejected</p>\n                <p className=\"text-2xl font-bold text-gray-900\">{rejectedCount}</p>\n              </div>\n            </div>\n          </div>\n\n          <div className=\"card\">\n            <div className=\"flex items-center\">\n              <div className=\"p-2 bg-blue-100 rounded-lg\">\n                <Receipt className=\"h-6 w-6 text-blue-600\" />\n              </div>\n              <div className=\"ml-4\">\n                <p className=\"text-sm font-medium text-gray-600\">Total Requests</p>\n                <p className=\"text-2xl font-bold text-gray-900\">{allRequests.length}</p>\n              </div>\n            </div>\n          </div>\n        </div>\n\n        {/* Tabs */}\n        <div className=\"bg-white rounded-lg shadow\">\n          <div className=\"border-b border-gray-200\">\n            <nav className=\"-mb-px flex space-x-8 px-6\">\n              <button\n                onClick={() => setActiveTab('pending')}\n                className={`py-4 px-1 border-b-2 font-medium text-sm ${\n                  activeTab === 'pending'\n                    ? 'border-blue-500 text-blue-600'\n                    : 'border-transparent text-gray-500 hover:text-gray-700 hover:border-gray-300'\n                }`}\n              >\n                Pending Requests ({pendingCount})\n              </button>\n              <button\n                onClick={() => setActiveTab('all')}\n                className={`py-4 px-1 border-b-2 font-medium text-sm ${\n                  activeTab === 'all'\n                    ? 'border-blue-500 text-blue-600'\n                    : 'border-transparent text-gray-500 hover:text-gray-700 hover:border-gray-300'\n                }`}\n              >\n                All Requests ({allRequests.length})\n              </button>\n            </nav>\n          </div>\n\n          {/* Content */}\n          <div className=\"p-6\">\n            {loading ? (\n              <div className=\"text-center py-8\">\n                <div className=\"animate-spin rounded-full h-8 w-8 border-b-2 border-blue-600 mx-auto\"></div>\n                <p className=\"mt-2 text-gray-600\">Loading requests...</p>\n              </div>\n            ) : (\n              <>\n                {activeTab === 'pending' && (\n                  <>\n                    {pendingRequests.length === 0 ? (\n                      <div className=\"text-center py-8\">\n                        <Clock className=\"h-12 w-12 text-gray-400 mx-auto mb-4\" />\n                        <h3 className=\"text-lg font-medium text-gray-900 mb-2\">No pending requests</h3>\n                        <p className=\"text-gray-600\">All receipt requests have been processed or expired.</p>\n                      </div>\n                    ) : (\n                      <div className=\"space-y-4\">\n                        {pendingRequests.map((request) => (\n                          <div key={request.id} className=\"border border-gray-200 rounded-lg p-6\">\n                            <div className=\"flex justify-between items-start\">\n                              <div className=\"flex-1\">\n                                <div className=\"flex items-center space-x-2 mb-2\">\n                                  <h3 className=\"text-lg font-medium text-gray-900\">\n                                    Receipt Request #{request.id}\n                                  </h3>\n                                  <span className={`inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium ${getStatusColor(request.status)}`}>\n                                    {getStatusIcon(request.status)}\n                                    <span className=\"ml-1\">{RECEIPT_STATUS[request.status]}</span>\n                                  </span>\n                                </div>\n                                \n                                <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4 mb-4\">\n                                  <div>\n                                    <p className=\"text-sm text-gray-600\">Customer</p>\n                                    <p className=\"font-mono text-sm\">{formatAddress(request.customer)}</p>\n                                  </div>\n                                  <div>\n                                    <p className=\"text-sm text-gray-600\">Amount</p>\n                                    <p className=\"text-lg font-semibold\">{formatEther(request.amount)} ETH</p>\n                                  </div>\n                                  <div>\n                                    <p className=\"text-sm text-gray-600\">Transaction Date</p>\n                                    <p>{formatDate(request.transactionDate)}</p>\n                                  </div>\n                                  <div>\n                                    <p className=\"text-sm text-gray-600\">Requested</p>\n                                    <p>{formatDate(request.requestTimestamp)}</p>\n                                  </div>\n                                  <div>\n                                    <p className=\"text-sm text-gray-600\">Deadline</p>\n                                    <p>{formatDate(request.deadline)}</p>\n                                  </div>\n                                </div>\n                                \n                                {request.description && (\n                                  <div className=\"mb-4\">\n                                    <p className=\"text-sm text-gray-600\">Description</p>\n                                    <p className=\"text-gray-900\">{request.description}</p>\n                                  </div>\n                                )}\n                                {request.rejectionReason && (\n                                  <div className=\"mb-4\">\n                                    <p className=\"text-sm text-gray-600\">Rejection Reason</p>\n                                    <p className=\"text-gray-900\">{request.rejectionReason}</p>\n                                  </div>\n                                )}\n                                {request.disputeReason && (\n                                  <div className=\"mb-4\">\n                                    <p className=\"text-sm text-gray-600\">Dispute Reason</p>\n                                    <p className=\"text-gray-900\">{request.disputeReason}</p>\n                                  </div>\n                                )}\n                              </div>\n                            </div>\n                            \n                            {request.status !== 6 && (\n                              <div className=\"flex space-x-3 mt-4\">\n                                <button\n                                  onClick={() => handleApprove(request.id)}\n                                  disabled={processingRequests.has(request.id)}\n                                  className=\"btn-primary flex items-center space-x-2 disabled:opacity-50 disabled:cursor-not-allowed\"\n                                >\n                                  <CheckCircle className=\"h-4 w-4\" />\n                                  <span>Approve</span>\n                                </button>\n                                <button\n                                  onClick={() => openRejectModal(request.id)}\n                                  disabled={processingRequests.has(request.id)}\n                                  className=\"btn-secondary flex items-center space-x-2 disabled:opacity-50 disabled:cursor-not-allowed\"\n                                >\n                                  <XCircle className=\"h-4 w-4\" />\n                                  <span>Reject</span>\n                                </button>\n                              </div>\n                            )}\n                          </div>\n                        ))}\n                      </div>\n                    )}\n                  </>\n                )}\n\n                {activeTab === 'all' && (\n                  <>\n                    {allRequests.length === 0 ? (\n                      <div className=\"text-center py-8\">\n                        <Receipt className=\"h-12 w-12 text-gray-400 mx-auto mb-4\" />\n                        <h3 className=\"text-lg font-medium text-gray-900 mb-2\">No requests yet</h3>\n                        <p className=\"text-gray-600\">Customer receipt requests will appear here.</p>\n                      </div>\n                    ) : (\n                      <div className=\"overflow-hidden\">\n                        <table className=\"min-w-full divide-y divide-gray-200\">\n                          <thead className=\"bg-gray-50\">\n                            <tr>\n                              <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                                Request ID\n                              </th>\n                              <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                                Customer\n                              </th>\n                              <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                                Amount\n                              </th>\n                              <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                                Status\n                              </th>\n                              <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                                Requested\n                              </th>\n                              <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                                Deadline\n                              </th>\n                            </tr>\n                          </thead>\n                          <tbody className=\"bg-white divide-y divide-gray-200\">\n                            {allRequests.map((request) => (\n                              <tr key={request.id} className=\"hover:bg-gray-50\">\n                                <td className=\"px-6 py-4 whitespace-nowrap\">\n                                  <div className=\"text-sm font-medium text-gray-900\">\n                                    #{request.id}\n                                  </div>\n                                  <div className=\"text-sm text-gray-500\">\n                                    {request.description || 'No description'}\n                                  </div>\n                                  {request.rejectionReason && (\n                                    <div className=\"text-sm text-red-600\">\n                                      Rejection: {request.rejectionReason}\n                                    </div>\n                                  )}\n                                  {request.disputeReason && (\n                                    <div className=\"text-sm text-orange-600\">\n                                      Dispute: {request.disputeReason}\n                                    </div>\n                                  )}\n                                </td>\n                                <td className=\"px-6 py-4 whitespace-nowrap\">\n                                  <div className=\"text-sm font-mono text-gray-900\">\n                                    {formatAddress(request.customer)}\n                                  </div>\n                                </td>\n                                <td className=\"px-6 py-4 whitespace-nowrap\">\n                                  <div className=\"text-sm font-medium text-gray-900\">\n                                    {formatEther(request.amount)} ETH\n                                  </div>\n                                </td>\n                                <td className=\"px-6 py-4 whitespace-nowrap\">\n                                  <span className={`inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium ${getStatusColor(request.status)}`}>\n                                    {getStatusIcon(request.status)}\n                                    <span className=\"ml-1\">{RECEIPT_STATUS[request.status]}</span>\n                                  </span>\n                                </td>\n                                <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500\">\n                                  {formatDate(request.requestTimestamp)}\n                                </td>\n                                <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500\">\n                                  {formatDate(request.deadline)}\n                                </td>\n                              </tr>\n                            ))}\n                          </tbody>\n                        </table>\n                      </div>\n                    )}\n                  </>\n                )}\n              </>\n            )}\n          </div>\n        </div>\n\n        {/* Rejection Reason Modal */}\n        {isRejectModalOpen && (\n          <div className=\"fixed inset-0 bg-gray-600 bg-opacity-50 flex items-center justify-center z-50\">\n            <div className=\"bg-white rounded-lg shadow-lg p-6 w-full max-w-md\">\n              <h3 className=\"text-lg font-medium text-gray-900 mb-4\">Reject Receipt #{rejectReceiptId}</h3>\n              <div className=\"mb-4\">\n                <label htmlFor=\"rejectionReason\" className=\"block text-sm font-medium text-gray-700\">\n                  Reason for Rejection\n                </label>\n                <textarea\n                  id=\"rejectionReason\"\n                  className=\"mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-blue-500 focus:ring-blue-500 sm:text-sm\"\n                  rows=\"4\"\n                  value={rejectionReason}\n                  onChange={(e) => {\n                    setRejectionReason(e.target.value);\n                    setRejectionError('');\n                  }}\n                  placeholder=\"Enter the reason for rejecting this receipt\"\n                />\n                {rejectionError && (\n                  <p className=\"mt-2 text-sm text-red-600\">{rejectionError}</p>\n                )}\n              </div>\n              <div className=\"flex justify-end space-x-3\">\n                <button\n                  onClick={closeRejectModal}\n                  className=\"btn-secondary px-4 py-2 text-sm font-medium\"\n                >\n                  Cancel\n                </button>\n                <button\n                  onClick={handleReject}\n                  disabled={processingRequests.has(rejectReceiptId)}\n                  className=\"btn-primary px-4 py-2 text-sm font-medium disabled:opacity-50 disabled:cursor-not-allowed\"\n                >\n                  Confirm Reject\n                </button>\n              </div>\n            </div>\n          </div>\n        )}\n      </div>\n    </>\n  );\n};\n\nexport default BusinessPortal;"],"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}