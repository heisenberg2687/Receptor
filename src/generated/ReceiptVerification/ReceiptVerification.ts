// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  ethereum,
  JSONValue,
  TypedMap,
  Entity,
  Bytes,
  Address,
  BigInt,
} from "@graphprotocol/graph-ts";

export class BusinessRegistered extends ethereum.Event {
  get params(): BusinessRegistered__Params {
    return new BusinessRegistered__Params(this);
  }
}

export class BusinessRegistered__Params {
  _event: BusinessRegistered;

  constructor(event: BusinessRegistered) {
    this._event = event;
  }

  get businessAddress(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get businessName(): string {
    return this._event.parameters[1].value.toString();
  }

  get timestamp(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }
}

export class OwnershipTransferred extends ethereum.Event {
  get params(): OwnershipTransferred__Params {
    return new OwnershipTransferred__Params(this);
  }
}

export class OwnershipTransferred__Params {
  _event: OwnershipTransferred;

  constructor(event: OwnershipTransferred) {
    this._event = event;
  }

  get previousOwner(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get newOwner(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class ReceiptApproved extends ethereum.Event {
  get params(): ReceiptApproved__Params {
    return new ReceiptApproved__Params(this);
  }
}

export class ReceiptApproved__Params {
  _event: ReceiptApproved;

  constructor(event: ReceiptApproved) {
    this._event = event;
  }

  get receiptId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get vendor(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get timestamp(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }
}

export class ReceiptCancelled extends ethereum.Event {
  get params(): ReceiptCancelled__Params {
    return new ReceiptCancelled__Params(this);
  }
}

export class ReceiptCancelled__Params {
  _event: ReceiptCancelled;

  constructor(event: ReceiptCancelled) {
    this._event = event;
  }

  get receiptId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get canceller(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get timestamp(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }
}

export class ReceiptDisputed extends ethereum.Event {
  get params(): ReceiptDisputed__Params {
    return new ReceiptDisputed__Params(this);
  }
}

export class ReceiptDisputed__Params {
  _event: ReceiptDisputed;

  constructor(event: ReceiptDisputed) {
    this._event = event;
  }

  get receiptId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get disputer(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get reason(): string {
    return this._event.parameters[2].value.toString();
  }

  get timestamp(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }
}

export class ReceiptRejected extends ethereum.Event {
  get params(): ReceiptRejected__Params {
    return new ReceiptRejected__Params(this);
  }
}

export class ReceiptRejected__Params {
  _event: ReceiptRejected;

  constructor(event: ReceiptRejected) {
    this._event = event;
  }

  get receiptId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get vendor(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get reason(): string {
    return this._event.parameters[2].value.toString();
  }

  get timestamp(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }
}

export class ReceiptRequested extends ethereum.Event {
  get params(): ReceiptRequested__Params {
    return new ReceiptRequested__Params(this);
  }
}

export class ReceiptRequested__Params {
  _event: ReceiptRequested;

  constructor(event: ReceiptRequested) {
    this._event = event;
  }

  get receiptId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get customer(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get vendor(): Address {
    return this._event.parameters[2].value.toAddress();
  }

  get vendorName(): string {
    return this._event.parameters[3].value.toString();
  }

  get amount(): BigInt {
    return this._event.parameters[4].value.toBigInt();
  }

  get transactionDate(): BigInt {
    return this._event.parameters[5].value.toBigInt();
  }

  get timestamp(): BigInt {
    return this._event.parameters[6].value.toBigInt();
  }

  get deadline(): BigInt {
    return this._event.parameters[7].value.toBigInt();
  }
}

export class ReceiptVerified extends ethereum.Event {
  get params(): ReceiptVerified__Params {
    return new ReceiptVerified__Params(this);
  }
}

export class ReceiptVerified__Params {
  _event: ReceiptVerified;

  constructor(event: ReceiptVerified) {
    this._event = event;
  }

  get receiptId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get verifier(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get timestamp(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }
}

export class ReceiptVerification__businessesResult {
  value0: string;
  value1: string;
  value2: Address;
  value3: boolean;
  value4: BigInt;

  constructor(
    value0: string,
    value1: string,
    value2: Address,
    value3: boolean,
    value4: BigInt,
  ) {
    this.value0 = value0;
    this.value1 = value1;
    this.value2 = value2;
    this.value3 = value3;
    this.value4 = value4;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromString(this.value0));
    map.set("value1", ethereum.Value.fromString(this.value1));
    map.set("value2", ethereum.Value.fromAddress(this.value2));
    map.set("value3", ethereum.Value.fromBoolean(this.value3));
    map.set("value4", ethereum.Value.fromUnsignedBigInt(this.value4));
    return map;
  }

  getName(): string {
    return this.value0;
  }

  getDescription(): string {
    return this.value1;
  }

  getOwner(): Address {
    return this.value2;
  }

  getIsActive(): boolean {
    return this.value3;
  }

  getTotalReceipts(): BigInt {
    return this.value4;
  }
}

export class ReceiptVerification__getReceiptResultValue0Struct extends ethereum.Tuple {
  get id(): BigInt {
    return this[0].toBigInt();
  }

  get issuer(): Address {
    return this[1].toAddress();
  }

  get recipient(): Address {
    return this[2].toAddress();
  }

  get vendorName(): string {
    return this[3].toString();
  }

  get description(): string {
    return this[4].toString();
  }

  get amount(): BigInt {
    return this[5].toBigInt();
  }

  get transactionDate(): BigInt {
    return this[6].toBigInt();
  }

  get requestTimestamp(): BigInt {
    return this[7].toBigInt();
  }

  get deadline(): BigInt {
    return this[8].toBigInt();
  }

  get status(): i32 {
    return this[9].toI32();
  }

  get ipfsHash(): string {
    return this[10].toString();
  }

  get rejectionReason(): string {
    return this[11].toString();
  }

  get disputeReason(): string {
    return this[12].toString();
  }

  get exists(): boolean {
    return this[13].toBoolean();
  }
}

export class ReceiptVerification__receiptsResult {
  value0: BigInt;
  value1: Address;
  value2: Address;
  value3: string;
  value4: string;
  value5: BigInt;
  value6: BigInt;
  value7: BigInt;
  value8: BigInt;
  value9: i32;
  value10: string;
  value11: string;
  value12: string;
  value13: boolean;

  constructor(
    value0: BigInt,
    value1: Address,
    value2: Address,
    value3: string,
    value4: string,
    value5: BigInt,
    value6: BigInt,
    value7: BigInt,
    value8: BigInt,
    value9: i32,
    value10: string,
    value11: string,
    value12: string,
    value13: boolean,
  ) {
    this.value0 = value0;
    this.value1 = value1;
    this.value2 = value2;
    this.value3 = value3;
    this.value4 = value4;
    this.value5 = value5;
    this.value6 = value6;
    this.value7 = value7;
    this.value8 = value8;
    this.value9 = value9;
    this.value10 = value10;
    this.value11 = value11;
    this.value12 = value12;
    this.value13 = value13;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromUnsignedBigInt(this.value0));
    map.set("value1", ethereum.Value.fromAddress(this.value1));
    map.set("value2", ethereum.Value.fromAddress(this.value2));
    map.set("value3", ethereum.Value.fromString(this.value3));
    map.set("value4", ethereum.Value.fromString(this.value4));
    map.set("value5", ethereum.Value.fromUnsignedBigInt(this.value5));
    map.set("value6", ethereum.Value.fromUnsignedBigInt(this.value6));
    map.set("value7", ethereum.Value.fromUnsignedBigInt(this.value7));
    map.set("value8", ethereum.Value.fromUnsignedBigInt(this.value8));
    map.set(
      "value9",
      ethereum.Value.fromUnsignedBigInt(BigInt.fromI32(this.value9)),
    );
    map.set("value10", ethereum.Value.fromString(this.value10));
    map.set("value11", ethereum.Value.fromString(this.value11));
    map.set("value12", ethereum.Value.fromString(this.value12));
    map.set("value13", ethereum.Value.fromBoolean(this.value13));
    return map;
  }

  getId(): BigInt {
    return this.value0;
  }

  getIssuer(): Address {
    return this.value1;
  }

  getRecipient(): Address {
    return this.value2;
  }

  getVendorName(): string {
    return this.value3;
  }

  getDescription(): string {
    return this.value4;
  }

  getAmount(): BigInt {
    return this.value5;
  }

  getTransactionDate(): BigInt {
    return this.value6;
  }

  getRequestTimestamp(): BigInt {
    return this.value7;
  }

  getDeadline(): BigInt {
    return this.value8;
  }

  getStatus(): i32 {
    return this.value9;
  }

  getIpfsHash(): string {
    return this.value10;
  }

  getRejectionReason(): string {
    return this.value11;
  }

  getDisputeReason(): string {
    return this.value12;
  }

  getExists(): boolean {
    return this.value13;
  }
}

export class ReceiptVerification extends ethereum.SmartContract {
  static bind(address: Address): ReceiptVerification {
    return new ReceiptVerification("ReceiptVerification", address);
  }

  businessReceipts(param0: Address, param1: BigInt): BigInt {
    let result = super.call(
      "businessReceipts",
      "businessReceipts(address,uint256):(uint256)",
      [
        ethereum.Value.fromAddress(param0),
        ethereum.Value.fromUnsignedBigInt(param1),
      ],
    );

    return result[0].toBigInt();
  }

  try_businessReceipts(
    param0: Address,
    param1: BigInt,
  ): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "businessReceipts",
      "businessReceipts(address,uint256):(uint256)",
      [
        ethereum.Value.fromAddress(param0),
        ethereum.Value.fromUnsignedBigInt(param1),
      ],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  businesses(param0: Address): ReceiptVerification__businessesResult {
    let result = super.call(
      "businesses",
      "businesses(address):(string,string,address,bool,uint256)",
      [ethereum.Value.fromAddress(param0)],
    );

    return new ReceiptVerification__businessesResult(
      result[0].toString(),
      result[1].toString(),
      result[2].toAddress(),
      result[3].toBoolean(),
      result[4].toBigInt(),
    );
  }

  try_businesses(
    param0: Address,
  ): ethereum.CallResult<ReceiptVerification__businessesResult> {
    let result = super.tryCall(
      "businesses",
      "businesses(address):(string,string,address,bool,uint256)",
      [ethereum.Value.fromAddress(param0)],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new ReceiptVerification__businessesResult(
        value[0].toString(),
        value[1].toString(),
        value[2].toAddress(),
        value[3].toBoolean(),
        value[4].toBigInt(),
      ),
    );
  }

  getBusinessReceipts(_business: Address): Array<BigInt> {
    let result = super.call(
      "getBusinessReceipts",
      "getBusinessReceipts(address):(uint256[])",
      [ethereum.Value.fromAddress(_business)],
    );

    return result[0].toBigIntArray();
  }

  try_getBusinessReceipts(
    _business: Address,
  ): ethereum.CallResult<Array<BigInt>> {
    let result = super.tryCall(
      "getBusinessReceipts",
      "getBusinessReceipts(address):(uint256[])",
      [ethereum.Value.fromAddress(_business)],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigIntArray());
  }

  getPendingRequests(_vendor: Address): Array<BigInt> {
    let result = super.call(
      "getPendingRequests",
      "getPendingRequests(address):(uint256[])",
      [ethereum.Value.fromAddress(_vendor)],
    );

    return result[0].toBigIntArray();
  }

  try_getPendingRequests(_vendor: Address): ethereum.CallResult<Array<BigInt>> {
    let result = super.tryCall(
      "getPendingRequests",
      "getPendingRequests(address):(uint256[])",
      [ethereum.Value.fromAddress(_vendor)],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigIntArray());
  }

  getReceipt(
    _receiptId: BigInt,
  ): ReceiptVerification__getReceiptResultValue0Struct {
    let result = super.call(
      "getReceipt",
      "getReceipt(uint256):((uint256,address,address,string,string,uint256,uint256,uint256,uint256,uint8,string,string,string,bool))",
      [ethereum.Value.fromUnsignedBigInt(_receiptId)],
    );

    return changetype<ReceiptVerification__getReceiptResultValue0Struct>(
      result[0].toTuple(),
    );
  }

  try_getReceipt(
    _receiptId: BigInt,
  ): ethereum.CallResult<ReceiptVerification__getReceiptResultValue0Struct> {
    let result = super.tryCall(
      "getReceipt",
      "getReceipt(uint256):((uint256,address,address,string,string,uint256,uint256,uint256,uint256,uint8,string,string,string,bool))",
      [ethereum.Value.fromUnsignedBigInt(_receiptId)],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      changetype<ReceiptVerification__getReceiptResultValue0Struct>(
        value[0].toTuple(),
      ),
    );
  }

  getTotalReceipts(): BigInt {
    let result = super.call(
      "getTotalReceipts",
      "getTotalReceipts():(uint256)",
      [],
    );

    return result[0].toBigInt();
  }

  try_getTotalReceipts(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "getTotalReceipts",
      "getTotalReceipts():(uint256)",
      [],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  getUserReceipts(_user: Address): Array<BigInt> {
    let result = super.call(
      "getUserReceipts",
      "getUserReceipts(address):(uint256[])",
      [ethereum.Value.fromAddress(_user)],
    );

    return result[0].toBigIntArray();
  }

  try_getUserReceipts(_user: Address): ethereum.CallResult<Array<BigInt>> {
    let result = super.tryCall(
      "getUserReceipts",
      "getUserReceipts(address):(uint256[])",
      [ethereum.Value.fromAddress(_user)],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigIntArray());
  }

  owner(): Address {
    let result = super.call("owner", "owner():(address)", []);

    return result[0].toAddress();
  }

  try_owner(): ethereum.CallResult<Address> {
    let result = super.tryCall("owner", "owner():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  receipts(param0: BigInt): ReceiptVerification__receiptsResult {
    let result = super.call(
      "receipts",
      "receipts(uint256):(uint256,address,address,string,string,uint256,uint256,uint256,uint256,uint8,string,string,string,bool)",
      [ethereum.Value.fromUnsignedBigInt(param0)],
    );

    return new ReceiptVerification__receiptsResult(
      result[0].toBigInt(),
      result[1].toAddress(),
      result[2].toAddress(),
      result[3].toString(),
      result[4].toString(),
      result[5].toBigInt(),
      result[6].toBigInt(),
      result[7].toBigInt(),
      result[8].toBigInt(),
      result[9].toI32(),
      result[10].toString(),
      result[11].toString(),
      result[12].toString(),
      result[13].toBoolean(),
    );
  }

  try_receipts(
    param0: BigInt,
  ): ethereum.CallResult<ReceiptVerification__receiptsResult> {
    let result = super.tryCall(
      "receipts",
      "receipts(uint256):(uint256,address,address,string,string,uint256,uint256,uint256,uint256,uint8,string,string,string,bool)",
      [ethereum.Value.fromUnsignedBigInt(param0)],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new ReceiptVerification__receiptsResult(
        value[0].toBigInt(),
        value[1].toAddress(),
        value[2].toAddress(),
        value[3].toString(),
        value[4].toString(),
        value[5].toBigInt(),
        value[6].toBigInt(),
        value[7].toBigInt(),
        value[8].toBigInt(),
        value[9].toI32(),
        value[10].toString(),
        value[11].toString(),
        value[12].toString(),
        value[13].toBoolean(),
      ),
    );
  }

  userReceipts(param0: Address, param1: BigInt): BigInt {
    let result = super.call(
      "userReceipts",
      "userReceipts(address,uint256):(uint256)",
      [
        ethereum.Value.fromAddress(param0),
        ethereum.Value.fromUnsignedBigInt(param1),
      ],
    );

    return result[0].toBigInt();
  }

  try_userReceipts(
    param0: Address,
    param1: BigInt,
  ): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "userReceipts",
      "userReceipts(address,uint256):(uint256)",
      [
        ethereum.Value.fromAddress(param0),
        ethereum.Value.fromUnsignedBigInt(param1),
      ],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }
}

export class ConstructorCall extends ethereum.Call {
  get inputs(): ConstructorCall__Inputs {
    return new ConstructorCall__Inputs(this);
  }

  get outputs(): ConstructorCall__Outputs {
    return new ConstructorCall__Outputs(this);
  }
}

export class ConstructorCall__Inputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }
}

export class ConstructorCall__Outputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }
}

export class ApproveReceiptCall extends ethereum.Call {
  get inputs(): ApproveReceiptCall__Inputs {
    return new ApproveReceiptCall__Inputs(this);
  }

  get outputs(): ApproveReceiptCall__Outputs {
    return new ApproveReceiptCall__Outputs(this);
  }
}

export class ApproveReceiptCall__Inputs {
  _call: ApproveReceiptCall;

  constructor(call: ApproveReceiptCall) {
    this._call = call;
  }

  get _receiptId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class ApproveReceiptCall__Outputs {
  _call: ApproveReceiptCall;

  constructor(call: ApproveReceiptCall) {
    this._call = call;
  }
}

export class CancelReceiptCall extends ethereum.Call {
  get inputs(): CancelReceiptCall__Inputs {
    return new CancelReceiptCall__Inputs(this);
  }

  get outputs(): CancelReceiptCall__Outputs {
    return new CancelReceiptCall__Outputs(this);
  }
}

export class CancelReceiptCall__Inputs {
  _call: CancelReceiptCall;

  constructor(call: CancelReceiptCall) {
    this._call = call;
  }

  get _receiptId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class CancelReceiptCall__Outputs {
  _call: CancelReceiptCall;

  constructor(call: CancelReceiptCall) {
    this._call = call;
  }
}

export class DisputeReceiptCall extends ethereum.Call {
  get inputs(): DisputeReceiptCall__Inputs {
    return new DisputeReceiptCall__Inputs(this);
  }

  get outputs(): DisputeReceiptCall__Outputs {
    return new DisputeReceiptCall__Outputs(this);
  }
}

export class DisputeReceiptCall__Inputs {
  _call: DisputeReceiptCall;

  constructor(call: DisputeReceiptCall) {
    this._call = call;
  }

  get _receiptId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get _reason(): string {
    return this._call.inputValues[1].value.toString();
  }
}

export class DisputeReceiptCall__Outputs {
  _call: DisputeReceiptCall;

  constructor(call: DisputeReceiptCall) {
    this._call = call;
  }
}

export class RegisterBusinessCall extends ethereum.Call {
  get inputs(): RegisterBusinessCall__Inputs {
    return new RegisterBusinessCall__Inputs(this);
  }

  get outputs(): RegisterBusinessCall__Outputs {
    return new RegisterBusinessCall__Outputs(this);
  }
}

export class RegisterBusinessCall__Inputs {
  _call: RegisterBusinessCall;

  constructor(call: RegisterBusinessCall) {
    this._call = call;
  }

  get _name(): string {
    return this._call.inputValues[0].value.toString();
  }

  get _description(): string {
    return this._call.inputValues[1].value.toString();
  }
}

export class RegisterBusinessCall__Outputs {
  _call: RegisterBusinessCall;

  constructor(call: RegisterBusinessCall) {
    this._call = call;
  }
}

export class RejectReceiptCall extends ethereum.Call {
  get inputs(): RejectReceiptCall__Inputs {
    return new RejectReceiptCall__Inputs(this);
  }

  get outputs(): RejectReceiptCall__Outputs {
    return new RejectReceiptCall__Outputs(this);
  }
}

export class RejectReceiptCall__Inputs {
  _call: RejectReceiptCall;

  constructor(call: RejectReceiptCall) {
    this._call = call;
  }

  get _receiptId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get _reason(): string {
    return this._call.inputValues[1].value.toString();
  }
}

export class RejectReceiptCall__Outputs {
  _call: RejectReceiptCall;

  constructor(call: RejectReceiptCall) {
    this._call = call;
  }
}

export class RenounceOwnershipCall extends ethereum.Call {
  get inputs(): RenounceOwnershipCall__Inputs {
    return new RenounceOwnershipCall__Inputs(this);
  }

  get outputs(): RenounceOwnershipCall__Outputs {
    return new RenounceOwnershipCall__Outputs(this);
  }
}

export class RenounceOwnershipCall__Inputs {
  _call: RenounceOwnershipCall;

  constructor(call: RenounceOwnershipCall) {
    this._call = call;
  }
}

export class RenounceOwnershipCall__Outputs {
  _call: RenounceOwnershipCall;

  constructor(call: RenounceOwnershipCall) {
    this._call = call;
  }
}

export class RequestReceiptCall extends ethereum.Call {
  get inputs(): RequestReceiptCall__Inputs {
    return new RequestReceiptCall__Inputs(this);
  }

  get outputs(): RequestReceiptCall__Outputs {
    return new RequestReceiptCall__Outputs(this);
  }
}

export class RequestReceiptCall__Inputs {
  _call: RequestReceiptCall;

  constructor(call: RequestReceiptCall) {
    this._call = call;
  }

  get _vendorAddress(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _vendorName(): string {
    return this._call.inputValues[1].value.toString();
  }

  get _description(): string {
    return this._call.inputValues[2].value.toString();
  }

  get _amount(): BigInt {
    return this._call.inputValues[3].value.toBigInt();
  }

  get _transactionDate(): BigInt {
    return this._call.inputValues[4].value.toBigInt();
  }

  get _ipfsHash(): string {
    return this._call.inputValues[5].value.toString();
  }
}

export class RequestReceiptCall__Outputs {
  _call: RequestReceiptCall;

  constructor(call: RequestReceiptCall) {
    this._call = call;
  }
}

export class SetStatusChangePeriodCall extends ethereum.Call {
  get inputs(): SetStatusChangePeriodCall__Inputs {
    return new SetStatusChangePeriodCall__Inputs(this);
  }

  get outputs(): SetStatusChangePeriodCall__Outputs {
    return new SetStatusChangePeriodCall__Outputs(this);
  }
}

export class SetStatusChangePeriodCall__Inputs {
  _call: SetStatusChangePeriodCall;

  constructor(call: SetStatusChangePeriodCall) {
    this._call = call;
  }

  get _period(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class SetStatusChangePeriodCall__Outputs {
  _call: SetStatusChangePeriodCall;

  constructor(call: SetStatusChangePeriodCall) {
    this._call = call;
  }
}

export class TransferOwnershipCall extends ethereum.Call {
  get inputs(): TransferOwnershipCall__Inputs {
    return new TransferOwnershipCall__Inputs(this);
  }

  get outputs(): TransferOwnershipCall__Outputs {
    return new TransferOwnershipCall__Outputs(this);
  }
}

export class TransferOwnershipCall__Inputs {
  _call: TransferOwnershipCall;

  constructor(call: TransferOwnershipCall) {
    this._call = call;
  }

  get newOwner(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class TransferOwnershipCall__Outputs {
  _call: TransferOwnershipCall;

  constructor(call: TransferOwnershipCall) {
    this._call = call;
  }
}

export class VerifyReceiptCall extends ethereum.Call {
  get inputs(): VerifyReceiptCall__Inputs {
    return new VerifyReceiptCall__Inputs(this);
  }

  get outputs(): VerifyReceiptCall__Outputs {
    return new VerifyReceiptCall__Outputs(this);
  }
}

export class VerifyReceiptCall__Inputs {
  _call: VerifyReceiptCall;

  constructor(call: VerifyReceiptCall) {
    this._call = call;
  }

  get _receiptId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class VerifyReceiptCall__Outputs {
  _call: VerifyReceiptCall;

  constructor(call: VerifyReceiptCall) {
    this._call = call;
  }
}
